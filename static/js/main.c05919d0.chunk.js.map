{"version":3,"sources":["Game.js","Board.js","Lobby.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_TROOP_DECK","Array","TROOP_DECK_COLORS","TROOP_DECK_VALUES","VALUE_MAP","Map","FORMATION_STRENGTH_MAP","i","j","card","push","troop_deck","slice","shuffle_array","tactics_deck","player_hands","pop","board_cards","fill","unseen_cards","flag_statuses","BattleLine","name","setup","minPlayers","maxPlayers","moves","playCard","G","ctx","flag","numMoves","INVALID_MOVE","currentPlayer","length","ind","indexOf","splice","claimFlag","formations","player_id","formation","formation_opp","getFormations","remaining_cards","Set","k","delete","formation_strength","formation_sum","formationSum","is_flush","isFlush","is_straight","isStraight","is_set","isSet","formationStrength","formation_strength_opp","pot","potentialStraightFlush","formation_new","unseen_cards_new","potentialSet","potentialFlush","potentialStraight","potentialSum","potentialFormationStrength","formation_strength1","formation_strength2","get","isStrongestFormation","drawCard","deck","events","endTurn","endIf","count","count_consecutive","IsVictory","winner","sum","color","diff","Math","abs","value","arr","floor","random","temp","BattleLineBoard","props","selected_card","card_id","this","flag_id","deck_id","cardStyle","border","width","height","lineHeight","textAlign","tbody","cells","style","id","key","onClick","onClickCard","str","join","onClickSlot","onClickDeck","onClickFlag","React","Component","BattleLineLobby","event","setState","playerName","target","_createRoom","_updateConnection","gameID","playerID","_joinRoom","_leaveRoom","_enterLobby","state","_exitLobby","_startGame","numPlayers","_exitRoom","rooms_thead","rooms_th","room_id_col_style","padding","player_name_col_style","vs_col_style","button_col_style","type","handleNewRoom","handleRefreshRooms","rooms_tbody","rooms_row","room","connection","rooms","player1_name","players","undefined","player2_name","handleJoinRoom","handleLeaveRoom","handleStartGame","errorMsg","phase","onChange","handleChangeName","handleEnterLobby","handleExitLobby","board_element","createElement","runningGame","app","credentials","handleExitRoom","Lobby","App","Client","game","board","multiplayer","SocketIO","server","gameServer","lobbyServer","gameComponents","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c05919d0.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core';\n\nvar DEFAULT_TROOP_DECK = new Array();\nvar TROOP_DECK_COLORS = [\"r\",\"o\",\"y\",\"g\",\"b\",\"p\"];\nvar TROOP_DECK_VALUES = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"T\"];\nvar VALUE_MAP = new Map([[\"1\",1],[\"2\",2],[\"3\",3],[\"4\",4],[\"5\",5],[\"6\",6],[\"7\",7],[\"8\",8],[\"9\",9],[\"T\",10]]);\nvar FORMATION_STRENGTH_MAP = new Map([[\"straightflush\",5],[\"set\",4],[\"flush\",3],[\"straight\",2],[\"sum\",1],[\"incomplete\",0]]);\n\n\nfor(var i = 0; i != 10; i++){\n  for(var j = 0; j != 6; j++){\n    var card = TROOP_DECK_VALUES[i]+TROOP_DECK_COLORS[j];\n    DEFAULT_TROOP_DECK.push(card);\n  }\n}\n\nvar troop_deck = DEFAULT_TROOP_DECK.slice();\nshuffle_array(troop_deck);\n\nvar DEFAULT_TACTICS_DECK = [\"ALX\",\"DAR\",\"CAV\",\"321\",\"TRA\",\"DES\",\"RDP\",\"SCT\",\"FOG\",\"MUD\"];\nvar tactics_deck = DEFAULT_TACTICS_DECK.slice();\nshuffle_array(tactics_deck);\n\nvar player_hands = new Array();\nplayer_hands.push(new Array());\nplayer_hands.push(new Array());\n\nfor(var i = 0; i != 7; i++){\n  for(var j = 0; j != 2; j++){\n    player_hands[j].push(troop_deck.pop()); \n  }\n}\n\nvar board_cards = new Array(9).fill(new Array(2).fill(new Array()))\nvar unseen_cards = DEFAULT_TROOP_DECK.slice();\n\nvar flag_statuses = new Array(9).fill(null);\n\nexport const BattleLine = {\n  name: \"battle-line\",\n  setup: () => ({ troop_deck: troop_deck,\n                  tactics_deck: tactics_deck,\n                  player_hands: player_hands,\n                  board_cards: board_cards,\n                  unseen_cards: unseen_cards,\n                  flag_statuses: flag_statuses\n                }),\n  minPlayers: 2,\n  maxPlayers: 2,\n  moves: {\n    playCard: (G, ctx, card, flag) => {\n      if (ctx.numMoves > 0){\n        return INVALID_MOVE;\n      }\n      if (G.board_cards[flag][ctx.currentPlayer].length == 3){\n        return INVALID_MOVE;\n      }\n      if (G.flag_statuses[flag] != null){\n        return INVALID_MOVE;\n      }\n      G.board_cards[flag][ctx.currentPlayer].push(G.player_hands[ctx.currentPlayer][card]);\n      var ind = G.unseen_cards.indexOf(G.player_hands[ctx.currentPlayer][card]);\n      if (ind != -1){\n        G.unseen_cards.splice(ind,1);\n      }\n      G.player_hands[ctx.currentPlayer].splice(card, 1);\n    },\n    claimFlag: (G, ctx, flag) => {\n      if (ctx.numMoves == 0){\n        return INVALID_MOVE;\n      }\n      if (G.flag_statuses[flag] != null){\n        return INVALID_MOVE;\n      }\n      var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n      if (!isStrongestFormation(formations[0], formations[1], G.unseen_cards)){\n        return INVALID_MOVE;\n      }\n      G.flag_statuses[flag] = ctx.currentPlayer;\n    },\n    drawCard: (G, ctx, deck) => {\n      if (ctx.numMoves == 0){\n        return INVALID_MOVE;\n      }\n      G.player_hands[ctx.currentPlayer].push(troop_deck.pop());\n      ctx.events.endTurn();\n    }\n  },\n\n  // moves: {\n    \n\n  // },\n  endIf: (G, ctx) => {\n    if (IsVictory(G.flag_statuses, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer};\n    }\n  },\n};\n\n// Return true if `cells` is in a winning configuration.\nfunction IsVictory(flag_statuses, player_id) {\n  var count = 0;\n  var count_consecutive = 0;\n  for (var i = 0; i != 9; i++){\n    if (flag_statuses[i] == player_id){\n      count++;\n      count_consecutive++;\n    }\n    else{\n      count_consecutive = 0;\n    }\n    if (count >= 5 || count_consecutive >= 3){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getFormations(flag, player_id, board_cards){\n  var formation = [];\n  var formation_opp = [];\n  for(var i = 0; i != 2; i++){\n    for(var j = 0; j != board_cards[flag][i].length; j++){\n      if(i == player_id){\n        formation.push(board_cards[flag][i][j]);\n      }\n      else {\n        formation_opp.push(board_cards[flag][i][j]);\n      }\n    }\n  }\n  return [formation, formation_opp];\n}\n\nfunction isStrongestFormation(formation, formation_opp, unseen_cards){\n  var remaining_cards = new Set(DEFAULT_TROOP_DECK);\n  for(var i = 0; i != 9; i++){\n    for(var j = 0; j != 2; j++){\n      for(var k = 0; k != board_cards[i][j].length; k++){\n        remaining_cards.delete(board_cards[i][j][k]);\n      }\n    }\n  }\n  var formation_strength = formationStrength(formation);\n  var formation_strength_opp = potentialFormationStrength(formation_opp, unseen_cards);\n\n  return formationStrengthComparison(formation_strength, formation_strength_opp);\n}\n\nfunction formationStrengthComparison(formation_strength1, formation_strength2){\n  if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) > FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return true;\n  }\n  else if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) < FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return false;\n  }\n  else if (formation_strength1[1] >= formation_strength2[1]){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nfunction formationStrength(formation){\n  var formation_sum = formationSum(formation);\n  if (formation.length != 3){\n    return ['incomplete', formation_sum];\n  }\n  var is_flush = isFlush(formation);\n  var is_straight = isStraight(formation);\n  var is_set = isSet(formation);\n  if (is_flush && is_straight){\n    return ['straightflush', formation_sum];\n  }\n  else if (is_set){\n    return ['set', formation_sum];\n  }\n  else if (is_flush){\n    return ['flush', formation_sum];\n  }\n  else if (is_straight){\n    return ['straight', formation_sum];\n  }\n  else{\n    return ['sum', formation_sum];\n  }\n}\n\nfunction formationSum(formation){\n  var sum = 0;\n  for (var i = 0; i != formation.length; i++){\n    sum += VALUE_MAP.get(formation[i][0]);\n  }\n  return sum;\n}\n\nfunction isFlush(formation){\n  var color = null;\n  for (var i = 0; i != formation.length; i++){\n    if (color == null){\n      color = formation[i][1];\n    }\n    else if(color != formation[i][1]){\n      return false;\n    }\n  }\n  return true;\n}\nfunction isStraight(formation){\n  for (var i = 0; i != formation.length; i++){\n    for (var j = i+1; j != formation.length; j++){\n      var diff = Math.abs(VALUE_MAP.get(formation[i][0]) - VALUE_MAP.get(formation[j][0]));\n      if (diff == 0 || diff >= 3){\n        return false;\n      }  \n    }\n  }\n  return true;\n}\nfunction isSet(formation){\n  var value = null;\n  for (var i = 0; i != formation.length; i++){\n    if (value == null){\n      value = formation[i][0];\n    }\n    else if(value != formation[i][0]){\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction potentialFormationStrength(formation, unseen_cards){\n  var pot = potentialStraightFlush(formation, unseen_cards);\n  if (pot != -1){\n    return ['straightflush', pot];\n  }\n  var pot = potentialSet(formation, unseen_cards);\n  if (pot != -1){\n    return ['set', pot];\n  }\n  var pot = potentialFlush(formation, unseen_cards);\n  if (pot != -1){\n    return ['flush', pot];\n  }\n  var pot = potentialStraight(formation, unseen_cards);\n  if (pot != -1){\n    return ['straight', pot];\n  }\n  var pot = potentialSum(formation, unseen_cards);\n  if (pot != -1){\n    return ['sum', pot];\n  }\n  return ['incomplete', pot];\n}\n\nfunction potentialStraightFlush(formation, unseen_cards, ind = null){\n  if (ind == null){\n    ind = unseen_cards.length;\n  }\n  if (!(isFlush(formation) && isStraight(formation))){\n    return -1;\n  }\n  if (formation.length == 3){\n    return formationSum(formation);\n  }\n  for(var i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraightFlush(formation_new, unseen_cards_new, i);\n    if (pot != -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSet(formation, unseen_cards, ind = null){\n  if (ind == null){\n    ind = unseen_cards.length;\n  }\n  if (!isSet(formation)){\n    return -1;\n  }\n  if (formation.length == 3){\n    return formationSum(formation);\n  }\n  for(var i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSet(formation_new, unseen_cards_new, i);\n    if (pot != -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialFlush(formation, unseen_cards, ind = null){\n  if (ind == null){\n    ind = unseen_cards.length;\n  }\n  if (!isFlush(formation)){\n    return -1;\n  }\n  if (formation.length == 3){\n    return formationSum(formation);\n  }\n  for(var i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialFlush(formation_new, unseen_cards_new, i);\n    if (pot != -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialStraight(formation, unseen_cards, ind = null){\n  if (ind == null){\n    ind = unseen_cards.length;\n  }\n  if (!isStraight(formation)){\n    return -1;\n  }\n  if (formation.length == 3){\n    return formationSum(formation);\n  }\n  for(var i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraight(formation_new, unseen_cards_new, i);\n    if (pot != -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSum(formation, unseen_cards, ind = null){\n  if (ind == null){\n    ind = unseen_cards.length;\n  }\n  if (formation.length == 3){\n    return formationSum(formation);\n  }\n  for(var i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSum(formation_new, unseen_cards_new, i);\n    if (pot != -1){\n      return pot;\n    }\n  }\n  return -1;\n}\n\nfunction shuffle_array(arr){\n  for(var i = arr.length-1; i >= 0; i--){\n    var k = Math.floor(Math.random()*(i+1));\n    var temp = arr[k];\n    arr[k] = arr[i];\n    arr[i] = temp;\n  }\n}\n","import React from 'react';\n\nexport class BattleLineBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selected_card = null;\n  }\n  onClickCard(player_id, card_id) {\n    if (this.props.ctx.currentPlayer != player_id){\n      return;\n    }\n    this.selected_card = card_id;\n  }\n  onClickSlot(player_id, flag_id) {\n    if (this.props.ctx.currentPlayer != player_id){\n      return;\n    }\n    if (this.selected_card == null){\n      return;\n    }\n    this.props.moves.playCard(this.selected_card, flag_id);\n    this.selected_card = null;\n  }\n  onClickFlag(flag_id){\n    this.props.moves.claimFlag(flag_id); \n  }\n  onClickDeck(deck_id){\n    this.props.moves.drawCard(deck_id); \n  }\n  render() {\n    const cardStyle = {\n      border: '1px solid #555',\n      width: '100px',\n      height: '150px',\n      lineHeight: '150px',\n      textAlign: 'center',\n    };\n    let tbody = [];\n\n    let cells = [];\n    cells.push(\n        <td style={cardStyle}>\n          {this.props.ctx.currentPlayer == 0 ? 'X': ''}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[0].length; i++) {\n      let id = i;\n      cells.push(\n        <td style={cardStyle} key={id} onClick={() => this.onClickCard(0, i)}>\n          {this.props.G.player_hands[0][i]}\n        </td>\n      );\n    }\n    tbody.push(<tr key={0}>{cells}</tr>);\n    cells = [];\n    cells.push(\n        <td style={cardStyle}>\n        </td>\n    );\n    for (let i = 0; i < 9; i++) {\n      let id = 10+i;\n      let str = this.props.G.board_cards[i][0].join('\\n');\n      cells.push(\n        <td style={cardStyle} key={id} onClick={() => this.onClickSlot(0, i)}>\n          {str}\n        </td>\n      );\n    }\n    tbody.push(<tr key={1}>{cells}</tr>);\n    cells = [];\n    cells.push(\n      <td style={cardStyle} key={19} onClick={() => this.onClickDeck(0)}>\n        {'Troop'}\n      </td>\n    );\n    for (let i = 0; i < 9; i++) {\n      let id = 20+i;\n      cells.push(\n        <td style={cardStyle} key={id} onClick={() => this.onClickFlag(i)}>\n          {this.props.G.flag_statuses[i]}\n        </td>\n      );\n    }\n    tbody.push(<tr key={2}>{cells}</tr>);\n    cells = [];\n    cells.push(\n        <td style={cardStyle}>\n        </td>\n    );\n    for (let i = 0; i < 9; i++) {\n      let id = 30+i;\n      let str = this.props.G.board_cards[i][1].join('\\n');\n      cells.push(\n        <td style={cardStyle} key={id} onClick={() => this.onClickSlot(1,i)}>\n          {str}\n        </td>\n      );\n    }\n    tbody.push(<tr key={3}>{cells}</tr>);\n    cells = [];\n    cells.push(\n        <td style={cardStyle}> \n          {this.props.ctx.currentPlayer == 1 ? 'X': ''}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[1].length; i++) {\n      let id = 40+i;\n      cells.push(\n        <td style={cardStyle} key={id} onClick={() => this.onClickCard(1,i)}>\n          {this.props.G.player_hands[1][i]}\n        </td>\n      );\n    }\n    tbody.push(<tr key={4}>{cells}</tr>);\n\n\n    return (\n      <div>\n        <table id=\"board\">\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\n\nexport class BattleLineLobby extends Lobby{\n    constructor(props){\n        super(props);\n    }\n    handleChangeName(event){\n        this.setState({\n            playerName: event.target.value,\n        });\n    }\n    handleNewRoom(event){\n        this._createRoom('battle-line', 2);\n    }\n    handleRefreshRooms(event){\n        this._updateConnection();\n    }\n    handleJoinRoom(event, gameID, playerID){\n        this._joinRoom('battle-line', gameID, playerID);\n    }\n    handleLeaveRoom(event, gameID){\n        this._leaveRoom('battle-line', gameID);\n    }\n    handleEnterLobby(event){\n        this._enterLobby(this.state.playerName);\n    }\n    handleExitLobby(event){\n        this._exitLobby();\n    }\n    handleStartGame(event, gameID, playerID){\n        this._startGame('battle-line', {numPlayers: 2, gameID: gameID, playerID: playerID});\n    }\n    handleExitRoom(event){\n        this._exitRoom();\n    }\n    render(){\n        var rooms_thead = [];\n        var rooms_th = [];\n\n        const room_id_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const player_name_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const vs_col_style = {\n            width:\"30px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const button_col_style = {\n            width:\"100px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n\n        rooms_th.push(<th style={room_id_col_style}>{'Room ID'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 1'}</th>);\n        rooms_th.push(<th style={vs_col_style}>{'vs.'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 2'}</th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"New Room\" onClick={(event) => this.handleNewRoom(event)}/></th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"Refresh\" onClick={(event) => this.handleRefreshRooms(event)}/></th>);\n        rooms_thead.push(<tr>{rooms_th}</tr>);\n\n        var rooms_tbody = [];\n        for (var i = 0; i != this.connection.rooms.length; i++){\n            var rooms_row = [];\n            let room = this.connection.rooms[i];\n            var player1_name = (room.players.length > 0) ? room.players[0].name:undefined;\n            var player2_name = (room.players.length > 1) ? room.players[1].name:undefined;\n\n            rooms_row.push(<td style={room_id_col_style}>{room.gameID}</td>);\n            if (player1_name != undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player1_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 0)}/></td>);\n            }\n            rooms_row.push(<td style={vs_col_style}>{'vs.'}</td>);\n            if (player2_name != undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player2_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 1)}/></td>);\n            }    \n\n            if (player1_name == this.state.playerName || player2_name == this.state.playerName){\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Leave\" onClick={(event) => this.handleLeaveRoom(event, room.gameID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            if((player1_name == this.state.playerName && player2_name != undefined) || (player2_name == this.state.playerName && player1_name != undefined)){\n                var playerID = this.state.playerName == player1_name ? '0':'1';\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Play\" onClick={(event) => this.handleStartGame(event, room.gameID, playerID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            rooms_tbody.push(<tr>{rooms_row}</tr>);\n        }\n        // Change Name\n        // List of rooms\n        // Create room\n        // Join room\n        // Play\n        var errMsg = this.state.errorMsg != '' ? 'Error: ' + this.state.errorMsg:'';\n\n        if (this.state.phase == 'enter'){\n            return (\n                <div>\n                    {'Enter name: '}\n                    <input type=\"text\" value={this.state.playerName} onChange={(event) => this.handleChangeName(event)}/>\n                    <input type=\"button\" value=\"Enter Lobby\" onClick={(event) => this.handleEnterLobby(event)}/>\n                </div>\n            );\n        }\n        else if (this.state.phase == 'list'){\n            return (\n                <div>\n                    <input type=\"button\" value=\"Exit Lobby\" onClick={(event) => this.handleExitLobby(event)}/>\n                    <br></br>\n                    <table id=\"rooms\">\n                        <thead>\n                            {rooms_thead}\n                        </thead>\n                        <tbody>\n                            {rooms_tbody}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        else if (this.state.phase == 'play'){\n            var board_element = React.createElement(this.state.runningGame.app, {\n                gameID: this.state.runningGame.gameID,\n                playerID: this.state.runningGame.playerID,\n                credentials: this.state.runningGame.credentials\n            });\n            return (\n                <div>\n                    {board_element}\n                    <br></br>\n                    <input type=\"button\" value=\"Exit Game\" onClick={(event) => this.handleExitRoom(event)}/>\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { BattleLine } from './Game';\nimport { BattleLineBoard } from './Board';\nimport { BattleLineLobby } from './Lobby';\n\nimport { Lobby } from 'boardgame.io/react';\n\nconst BattleLineClient = Client({\n  game: BattleLine,\n  board: BattleLineBoard,\n  multiplayer: SocketIO({ server: 'https://battleline-backend.herokuapp.com' }),\n});\n\nconst App = () => (\n  <div>\n    <BattleLineLobby\n    gameServer={'https://battleline-backend.herokuapp.com'}\n    lobbyServer={'https://battleline-backend.herokuapp.com'}\n    gameComponents={[{game: BattleLine, board: BattleLineBoard}]}\n    />\n  </div>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}