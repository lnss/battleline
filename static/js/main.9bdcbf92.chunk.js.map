{"version":3,"sources":["Game.js","BoardComponents.js","Board.js","Lobby.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_TROOP_DECK","TROOP_DECK_COLORS","TROOP_DECK_VALUES","VALUE_MAP","Map","FORMATION_STRENGTH_MAP","i","j","card","push","troop_deck","slice","shuffle_array","tactics_deck","player_hands","pop","board_cards","Array","fill","unseen_cards","flag_statuses","BattleLine","name","setup","minPlayers","maxPlayers","moves","playCard","G","ctx","flag","numMoves","INVALID_MOVE","currentPlayer","length","ind","indexOf","splice","claimFlag","move","formations","player_id","formation","formation_opp","parseInt","getFormations","remaining_cards","Set","k","delete","formation_strength","formation_sum","formationSum","is_flush","isFlush","is_straight","isStraight","is_set","isSet","formationStrength","formation_strength_opp","pot","potentialStraightFlush","formation_new","unseen_cards_new","potentialSet","potentialFlush","potentialStraight","potentialSum","potentialFormationStrength","formation_strength1","formation_strength2","get","isStrongestFormation","noLimit","drawCard","deck","events","endTurn","client","passTurn","canPassTurn","playerView","playerID","troop_deck_stripped","tactics_deck_stripped","player_hands_stripped","opp_hand_stripped","stripSecrets","endIf","count","count_consecutive","IsVictory","winner","sum","color","diff","Math","abs","value","arr","floor","random","temp","hand","have_troop_card","canPlayTroopCard","COLOR_MAP","Card","props","cardRefs","React","createRef","this","updateCanvas","current","getContext","clearRect","translate","side","selected","str","drawTroopCardFront","drawCardOutline","fillStyle","fillRect","card_width","card_height","font","textAlign","fillText","drawTroopCardBack","ref","width","height","Component","Formation","formationRefs","cards","show_flag","drawFlag","Flag","flagRefs","card_str","val","lineHeight","measureText","padding","width_1","width_0","reduce_spacing","lineWidth","beginPath","moveTo","lineTo","stroke","rotate","PI","corner_radius","fill_color","strokeStyle","arcTo","closePath","y_offset","img","document","getElementById","drawImage","BattleLineBoard","selected_card","card_id","forceUpdate","flag_id","deck_id","tbody","cells","key","style","onClick","onClickCard","pass_display","toString","rowSpan","id","margin","type","display","onClickPass","onClickDeck","onClickSlot","onClickFlag","BattleLineLobby","event","setState","playerName","target","_createRoom","_updateConnection","gameID","_joinRoom","_leaveRoom","_enterLobby","state","_exitLobby","_startGame","numPlayers","_exitRoom","rooms_thead","rooms_th","room_id_col_style","player_name_col_style","vs_col_style","button_col_style","handleNewRoom","handleRefreshRooms","rooms_tbody","rooms_row","room","connection","rooms","player1_name","players","undefined","player2_name","handleJoinRoom","handleLeaveRoom","handleStartGame","phase","onChange","handleChangeName","handleEnterLobby","handleExitLobby","board_element","createElement","runningGame","app","credentials","handleExitRoom","Lobby","Header","bgcolor","fontFamily","fontSize","href","src","alt","App","Client","game","board","multiplayer","SocketIO","server","gameServer","lobbyServer","gameComponents","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9bdcbf92.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core';\n\nvar DEFAULT_TROOP_DECK = [];\nvar TROOP_DECK_COLORS = [\"r\",\"o\",\"y\",\"g\",\"b\",\"p\"];\nvar TROOP_DECK_VALUES = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"T\"];\nvar VALUE_MAP = new Map([[\"1\",1],[\"2\",2],[\"3\",3],[\"4\",4],[\"5\",5],[\"6\",6],[\"7\",7],[\"8\",8],[\"9\",9],[\"T\",10]]);\nvar FORMATION_STRENGTH_MAP = new Map([[\"straightflush\",5],[\"set\",4],[\"flush\",3],[\"straight\",2],[\"sum\",1],[\"incomplete\",0]]);\n\nfor(let i = 0; i !== 10; i++){\n  for(let j = 0; j !== 6; j++){\n    var card = TROOP_DECK_VALUES[i]+TROOP_DECK_COLORS[j];\n    DEFAULT_TROOP_DECK.push(card);\n  }\n}\n\nvar troop_deck = DEFAULT_TROOP_DECK.slice();\nshuffle_array(troop_deck);\n\nvar DEFAULT_TACTICS_DECK = [\"ALX\",\"DAR\",\"CAV\",\"321\",\"TRA\",\"DES\",\"RDP\",\"SCT\",\"FOG\",\"MUD\"];\nvar tactics_deck = DEFAULT_TACTICS_DECK.slice();\nshuffle_array(tactics_deck);\n\nvar player_hands = [];\nplayer_hands.push([]);\nplayer_hands.push([]);\n\nfor(let i = 0; i !== 7; i++){\n  for(let j = 0; j !== 2; j++){\n    player_hands[j].push(troop_deck.pop()); \n  }\n}\n\nvar board_cards = new Array(9).fill(new Array(2).fill([]))\nvar unseen_cards = DEFAULT_TROOP_DECK.slice();\n\nvar flag_statuses = new Array(9).fill(null);\n\nexport const BattleLine = {\n  name: \"battle-line\",\n  setup: () => ({ troop_deck: troop_deck,\n                  tactics_deck: tactics_deck,\n                  player_hands: player_hands,\n                  board_cards: board_cards,\n                  unseen_cards: unseen_cards,\n                  flag_statuses: flag_statuses\n                }),\n  minPlayers: 2,\n  maxPlayers: 2,\n  moves: {\n    playCard: (G, ctx, card, flag) => {\n      if (ctx.numMoves > 0){\n        return INVALID_MOVE;\n      }\n      if (G.board_cards[flag][ctx.currentPlayer].length === 3){\n        return INVALID_MOVE;\n      }\n      if (G.flag_statuses[flag] !== null){\n        return INVALID_MOVE;\n      }\n      G.board_cards[flag][ctx.currentPlayer].push(G.player_hands[ctx.currentPlayer][card]);\n      var ind = G.unseen_cards.indexOf(G.player_hands[ctx.currentPlayer][card]);\n      if (ind !== -1){\n        G.unseen_cards.splice(ind,1);\n      }\n      G.player_hands[ctx.currentPlayer].splice(card, 1);\n    },\n    claimFlag: {\n      move: (G, ctx, flag) => {\n        if (G.flag_statuses[flag] !== null){\n          return INVALID_MOVE;\n        }\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        if (!isStrongestFormation(formations[0], formations[1], G.unseen_cards)){\n          return INVALID_MOVE;\n        }\n        G.flag_statuses[flag] = ctx.currentPlayer;\n      },\n      noLimit: true\n    },\n    drawCard: {\n      move: (G, ctx, deck) => {\n        if (ctx.numMoves === 0){\n          return INVALID_MOVE;\n        }\n        if (G.troop_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        G.player_hands[ctx.currentPlayer].push(G.troop_deck.pop());\n        ctx.events.endTurn();\n      },\n      client: false\n    },\n    passTurn: (G, ctx) => {\n      if (!canPassTurn(G, ctx)){\n        return INVALID_MOVE\n      }\n      ctx.events.endTurn();\n    }\n  },\n  playerView: (G, ctx, playerID) => {return stripSecrets(G, playerID)},\n\n  // },\n  endIf: (G, ctx) => {\n    if (IsVictory(G.flag_statuses, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer};\n    }\n  },\n};\n\n// Return true if `cells` is in a winning configuration.\nfunction IsVictory(flag_statuses, player_id) {\n  var count = 0;\n  var count_consecutive = 0;\n  for (let i = 0; i !== 9; i++){\n    if (flag_statuses[i] === player_id){\n      count++;\n      count_consecutive++;\n    }\n    else{\n      count_consecutive = 0;\n    }\n    if (count >= 5 || count_consecutive >= 3){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getFormations(flag, player_id, board_cards){\n  var formation = [];\n  var formation_opp = [];\n  for(let i = 0; i !== 2; i++){\n    for(let j = 0; j !== board_cards[flag][i].length; j++){\n      if(i === parseInt(player_id)){\n        formation.push(board_cards[flag][i][j]);\n      }\n      else {\n        formation_opp.push(board_cards[flag][i][j]);\n      }\n    }\n  }\n  return [formation, formation_opp];\n}\n\nfunction isStrongestFormation(formation, formation_opp, unseen_cards){\n  var remaining_cards = new Set(DEFAULT_TROOP_DECK);\n  for(let i = 0; i !== 9; i++){\n    for(let j = 0; j !== 2; j++){\n      for(let k = 0; k !== board_cards[i][j].length; k++){\n        remaining_cards.delete(board_cards[i][j][k]);\n      }\n    }\n  }\n  var formation_strength = formationStrength(formation);\n  var formation_strength_opp = potentialFormationStrength(formation_opp, unseen_cards);\n\n  return formationStrengthComparison(formation_strength, formation_strength_opp);\n}\n\nfunction formationStrengthComparison(formation_strength1, formation_strength2){\n  if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) > FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return true;\n  }\n  else if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) < FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return false;\n  }\n  else if (formation_strength1[1] >= formation_strength2[1]){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nfunction formationStrength(formation){\n  var formation_sum = formationSum(formation);\n  if (formation.length !== 3){\n    return ['incomplete', formation_sum];\n  }\n  var is_flush = isFlush(formation);\n  var is_straight = isStraight(formation);\n  var is_set = isSet(formation);\n  if (is_flush && is_straight){\n    return ['straightflush', formation_sum];\n  }\n  else if (is_set){\n    return ['set', formation_sum];\n  }\n  else if (is_flush){\n    return ['flush', formation_sum];\n  }\n  else if (is_straight){\n    return ['straight', formation_sum];\n  }\n  else{\n    return ['sum', formation_sum];\n  }\n}\n\nfunction formationSum(formation){\n  var sum = 0;\n  for (let i = 0; i !== formation.length; i++){\n    sum += VALUE_MAP.get(formation[i][0]);\n  }\n  return sum;\n}\n\nfunction isFlush(formation){\n  var color = null;\n  for (let i = 0; i !== formation.length; i++){\n    if (color === null){\n      color = formation[i][1];\n    }\n    else if(color !== formation[i][1]){\n      return false;\n    }\n  }\n  return true;\n}\nfunction isStraight(formation){\n  for (let i = 0; i !== formation.length; i++){\n    for (let j = i+1; j !== formation.length; j++){\n      var diff = Math.abs(VALUE_MAP.get(formation[i][0]) - VALUE_MAP.get(formation[j][0]));\n      if (diff === 0 || diff >= 3){\n        return false;\n      }  \n    }\n  }\n  return true;\n}\nfunction isSet(formation){\n  var value = null;\n  for (let i = 0; i !== formation.length; i++){\n    if (value === null){\n      value = formation[i][0];\n    }\n    else if(value !== formation[i][0]){\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction potentialFormationStrength(formation, unseen_cards){\n  let pot = potentialStraightFlush(formation, unseen_cards);\n  if (pot !== -1){\n    return ['straightflush', pot];\n  }\n  pot = potentialSet(formation, unseen_cards);\n  if (pot !== -1){\n    return ['set', pot];\n  }\n  pot = potentialFlush(formation, unseen_cards);\n  if (pot !== -1){\n    return ['flush', pot];\n  }\n  pot = potentialStraight(formation, unseen_cards);\n  if (pot !== -1){\n    return ['straight', pot];\n  }\n  pot = potentialSum(formation, unseen_cards);\n  if (pot !== -1){\n    return ['sum', pot];\n  }\n  return ['incomplete', pot];\n}\n\nfunction potentialStraightFlush(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  if (!(isFlush(formation) && isStraight(formation))){\n    return -1;\n  }\n  if (formation.length === 3){\n    return formationSum(formation);\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraightFlush(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSet(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  if (!isSet(formation)){\n    return -1;\n  }\n  if (formation.length === 3){\n    return formationSum(formation);\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSet(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialFlush(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  if (!isFlush(formation)){\n    return -1;\n  }\n  if (formation.length === 3){\n    return formationSum(formation);\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialFlush(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialStraight(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  if (!isStraight(formation)){\n    return -1;\n  }\n  if (formation.length === 3){\n    return formationSum(formation);\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraight(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSum(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  if (formation.length === 3){\n    return formationSum(formation);\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSum(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\n\nfunction shuffle_array(arr){\n  for(let i = arr.length-1; i >= 0; i--){\n    var k = Math.floor(Math.random()*(i+1));\n    var temp = arr[k];\n    arr[k] = arr[i];\n    arr[i] = temp;\n  }\n}\n\nfunction stripSecrets(G, playerID){\n  var troop_deck_stripped = new Array(G.troop_deck.length).fill(\"troop\");\n  var tactics_deck_stripped = new Array(G.tactics_deck.length).fill(\"tactics\");\n  var player_hands_stripped = [];\n  for (let i = 0; i !== 2; i++){\n    if(parseInt(playerID) === i){\n      player_hands_stripped.push(G.player_hands[i]);\n    }\n    else{\n      var opp_hand_stripped = [];\n      for (let j = 0; j !== G.player_hands[i].length; j++){\n        opp_hand_stripped.push('troop');\n      }\n      player_hands_stripped.push(opp_hand_stripped);\n    }\n  }\n\n  var G_stripped = {troop_deck: troop_deck_stripped,\n                    tactics_deck: tactics_deck_stripped,\n                    player_hands: player_hands_stripped,\n                    board_cards: G.board_cards,\n                    unseen_cards: G.unseen_cards,\n                    flag_statuses: G.flag_statuses};\n  return G_stripped;\n}\n\nfunction canPlayTroopCard(board_cards, player_id, flag_statuses, hand){\n  let have_troop_card = false;\n  for (let i = 0; i !== hand.length && !have_troop_card; i++){\n    if (hand[i].length === 2){\n      have_troop_card = true;\n    }\n  }\n  if (!have_troop_card){\n    return false;\n  }\n  for (let i = 0; i !== 9; i++){\n    if (board_cards[i][player_id].length !== 3 && flag_statuses[i] === null){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction canPassTurn(G, ctx){\n  if (ctx.numMoves === 0){\n    return !canPlayTroopCard(G.board_cards, ctx.currentPlayer, G.flag_statuses, G.player_hands[ctx.currentPlayer]); \n  }\n  else{\n    return G.troop_deck.length === 0;\n  }\n}\n\nexport default canPassTurn;","import React from 'react';\n\nvar COLOR_MAP = new Map([[\"r\",\"#FF0000\"],[\"o\",\"#FFA500\"],[\"y\",\"#FFFF00\"],[\"g\",\"#008000\"],[\"b\",\"#0000FF\"],[\"p\",\"#800080\"]]);\n\nexport class Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cardRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.cardRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 150);\n        let translate = (this.props.side === 'top' && this.props.selected) ||  (this.props.side === 'bottom' && !this.props.selected) ? 0:30;\n        ctx.translate(0,translate);\n        if (this.props.str.length === 2){\n            drawTroopCardFront(ctx, this.props.str);\n        }\n        else if (this.props.str === 'troop'){\n            drawTroopCardBack(ctx);\n        }\n        ctx.translate(0,-translate);\n    }\n\n    render() {\n         return (\n             <canvas ref={this.cardRefs} width={80} height={150}/>\n         );\n    }\n}\n\nexport class Formation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formationRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.formationRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 190);\n        if (this.props.side === 'top'){\n            ctx.translate(0,70);\n            for (let i = 0; i !== this.props.cards.length; i++){\n                drawTroopCardFront(ctx, this.props.cards[i]);\n                ctx.translate(0,-35);\n            }\n            ctx.translate(0,-35*(2-this.props.cards.length))\n        }\n        else{\n            for (let i = 0; i !== this.props.cards.length; i++){\n                drawTroopCardFront(ctx, this.props.cards[i]);\n                ctx.translate(0,35);\n            }\n            ctx.translate(0,-35*this.props.cards.length)\n        }\n        if (this.props.show_flag){\n            let y_offset = this.props.side === 'top' ? 35:105;\n            drawFlag(ctx, y_offset);\n        }\n        \n    }\n\n    render() {\n         return (\n             <canvas ref={this.formationRefs} width={80} height={190}/>\n         );\n    }   \n}\n\nexport class Flag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.flagRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.flagRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 50);\n        if (this.props.show_flag){\n            drawFlag(ctx, 0);\n        }\n    }\n    render() {\n         return (\n             <canvas ref={this.flagRefs} width={80} height={50}/>\n         );\n    }   \n}\n\nfunction drawTroopCardFront(ctx, card_str){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n    let val = card_str[0];\n    let color = card_str[1];\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#FFFFFF\");\n    ctx.fillStyle = COLOR_MAP.get(color);\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    ctx.font = \"18px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    for (let i = 0; i !== 2; i++){\n        if (val !== 'T'){\n            ctx.fillText(val, padding + inset_width/2, padding + inset_height/2 + lineHeight/2 - 2); \n        }\n        else{\n            let reduce_spacing = 4;\n            let width_1 = ctx.measureText('1').width;\n            let width_0 = ctx.measureText('0').width;\n\n            ctx.fillText('1', padding + inset_width/2 - width_1/2 + reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2); \n            ctx.fillText('0', padding + inset_width/2 + width_0/2 - reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2);\n        }\n        if (val === '6' || val === '9'){\n            let width = ctx.measureText(val).width;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(padding + inset_width/2 - width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.lineTo(padding + inset_width/2 + width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.stroke();\n        }\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n}\n\nfunction drawTroopCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#000000\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"16px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TROOP', card_width/2, card_height/2)\n}\n\nfunction drawCardOutline(ctx, width, height, corner_radius, fill_color){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = fill_color;\n    let lineWidth = 2;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(corner_radius+lineWidth/2, lineWidth/2);\n    ctx.lineTo(width-corner_radius-lineWidth/2, lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, lineWidth/2, width-lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(width-lineWidth/2, height-corner_radius-lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, height-lineWidth/2, width-corner_radius-lineWidth/2, height-lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(corner_radius+lineWidth/2, height-lineWidth/2);\n    ctx.arcTo(lineWidth/2, height-lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(lineWidth/2, corner_radius+lineWidth/2);\n    ctx.arcTo(lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, lineWidth/2, corner_radius+lineWidth/2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawFlag(ctx, y_offset){\n    var img = document.getElementById(\"flag\");\n    ctx.drawImage(img, 15, y_offset, 50, 50);\n\n}","import React from 'react';\nimport {Card, Formation, Flag} from './BoardComponents'\nimport canPassTurn from './Game'\n\nexport class BattleLineBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selected_card = null;\n  }\n  onClickCard(player_id, card_id) {\n    if (this.props.ctx.currentPlayer !== player_id){\n      return;\n    }\n    if (this.selected_card !== card_id){\n      this.selected_card = card_id;\n      this.forceUpdate();\n    }\n\n  }\n  onClickSlot(player_id, flag_id) {\n    if (this.props.ctx.currentPlayer !== player_id){\n      return;\n    }\n    if (this.selected_card === null){\n      return;\n    }\n    this.props.moves.playCard(this.selected_card, flag_id);\n    this.selected_card = null;\n  }\n  onClickFlag(flag_id){\n    this.props.moves.claimFlag(flag_id); \n  }\n  onClickDeck(deck_id){\n    this.props.moves.drawCard(deck_id); \n  }\n  onClickPass(){\n    this.props.moves.passTurn();\n  }\n  render() {\n    let tbody = [];\n\n    let cells = [];\n    cells.push(\n        <td key ={cells.length} style={{textAlign: 'center'}}>\n          {this.props.ctx.currentPlayer === '0' ? 'Your turn!': ''}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[0].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('0', i)}>\n          <Card str={this.props.G.player_hands[0][i]} side={'top'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='0' && this.props.playerID==='0' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    let pass_display = new Array(2).fill('none');\n    for (let i = 0; i !== 2; i++){\n      if (this.props.ctx.currentPlayer === this.props.playerID && this.props.ctx.currentPlayer === i.toString() && canPassTurn(this.props.G, this.props.ctx)){\n        pass_display[i] = 'block';\n      }\n    }\n    cells.push(\n      <td rowSpan=\"3\" key={cells.length}>\n        <table id=\"troop_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[0]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={() => this.onClickDeck(0)}>\n                <Card str={this.props.G.troop_deck.length>0 ? this.props.G.troop_deck[0]:''}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[1]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickSlot('0', i)}>\n          <Formation cards={this.props.G.board_cards[i][0]} side={'top'} show_flag={this.props.G.flag_statuses[i]==='0'}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickFlag(i)}>\n          <Flag show_flag={this.props.G.flag_statuses[i]===null}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickSlot('1',i)}>\n          <Formation cards={this.props.G.board_cards[i][1]} side={'bottom'} show_flag={this.props.G.flag_statuses[i]==='1'}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    cells.push(\n        <td key={cells.length} style={{textAlign: 'center'}}>\n          {this.props.ctx.currentPlayer === '1' ? 'Your turn!': ''}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[1].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('1',i)}>\n          <Card str={this.props.G.player_hands[1][i]} side={'bottom'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='1' && this.props.playerID==='1' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    return (\n      <div>\n        <table id=\"board\" style={{margin:\"auto\"}}>\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\n\nexport class BattleLineLobby extends Lobby{\n    handleChangeName(event){\n        this.setState({\n            playerName: event.target.value,\n        });\n    }\n    handleNewRoom(event){\n        this._createRoom('battle-line', 2);\n    }\n    handleRefreshRooms(event){\n        this._updateConnection();\n    }\n    handleJoinRoom(event, gameID, playerID){\n        this._joinRoom('battle-line', gameID, playerID);\n    }\n    handleLeaveRoom(event, gameID){\n        this._leaveRoom('battle-line', gameID);\n    }\n    handleEnterLobby(event){\n        this._enterLobby(this.state.playerName);\n    }\n    handleExitLobby(event){\n        this._exitLobby();\n    }\n    handleStartGame(event, gameID, playerID){\n        this._startGame('battle-line', {numPlayers: 2, gameID: gameID, playerID: playerID});\n    }\n    handleExitRoom(event){\n        this._exitRoom();\n    }\n    render(){\n        var rooms_thead = [];\n        var rooms_th = [];\n\n        const room_id_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const player_name_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const vs_col_style = {\n            width:\"30px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const button_col_style = {\n            width:\"100px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n\n        rooms_th.push(<th style={room_id_col_style}>{'Room ID'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 1'}</th>);\n        rooms_th.push(<th style={vs_col_style}>{'vs.'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 2'}</th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"New Room\" onClick={(event) => this.handleNewRoom(event)}/></th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"Refresh\" onClick={(event) => this.handleRefreshRooms(event)}/></th>);\n        rooms_thead.push(<tr>{rooms_th}</tr>);\n\n        var rooms_tbody = [];\n        for (var i = 0; i !== this.connection.rooms.length; i++){\n            var rooms_row = [];\n            let room = this.connection.rooms[i];\n            var player1_name = (room.players.length > 0) ? room.players[0].name:undefined;\n            var player2_name = (room.players.length > 1) ? room.players[1].name:undefined;\n\n            rooms_row.push(<td style={room_id_col_style}>{room.gameID}</td>);\n            if (player1_name !== undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player1_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 0)}/></td>);\n            }\n            rooms_row.push(<td style={vs_col_style}>{'vs.'}</td>);\n            if (player2_name !== undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player2_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 1)}/></td>);\n            }    \n\n            if (player1_name === this.state.playerName || player2_name === this.state.playerName){\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Leave\" onClick={(event) => this.handleLeaveRoom(event, room.gameID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            if((player1_name === this.state.playerName && player2_name !== undefined) || (player2_name === this.state.playerName && player1_name !== undefined)){\n                let playerID = this.state.playerName === player1_name ? '0':'1';\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Play\" onClick={(event) => this.handleStartGame(event, room.gameID, playerID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            rooms_tbody.push(<tr>{rooms_row}</tr>);\n        }\n\n        // var errMsg = this.state.errorMsg !== '' ? 'Error: ' + this.state.errorMsg:'';\n\n        if (this.state.phase === 'enter'){\n            return (\n                <div>\n                    {'Enter name: '}\n                    <input type=\"text\" value={this.state.playerName} onChange={(event) => this.handleChangeName(event)}/>\n                    <input type=\"button\" value=\"Enter Lobby\" onClick={(event) => this.handleEnterLobby(event)}/>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'list'){\n            return (\n                <div>\n                    <input type=\"button\" value=\"Exit Lobby\" onClick={(event) => this.handleExitLobby(event)}/>\n                    <br></br>\n                    <table id=\"rooms\">\n                        <thead>\n                            {rooms_thead}\n                        </thead>\n                        <tbody>\n                            {rooms_tbody}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'play'){\n            var board_element = React.createElement(this.state.runningGame.app, {\n                gameID: this.state.runningGame.gameID,\n                playerID: this.state.runningGame.playerID,\n                credentials: this.state.runningGame.credentials\n            });\n            return (\n                <div>\n                    {board_element}\n                    <br></br>\n                    <input type=\"button\" value=\"Exit Game\" onClick={(event) => this.handleExitRoom(event)}/>\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\n\nexport class Header extends React.Component {\n    render() {\n         return (\n            <div>\n                <table style={{width:\"100%\"}} bgcolor=\"#E4DB86\">\n                    <tbody>\n                        <tr>\n                            <td style={{fontFamily:\"Verdana\", fontSize:\"30px\",padding:\"10px\"}}>\n                                BATTLE LINE\n                            </td>\n                            <td style={{textAlign:\"right\"}}>\n                                <a href=\"https://github.com/rsandzimier/battleline\">\n                                    <img id=\"github\" src=\"https://raw.githubusercontent.com/rsandzimier/battleline/master/github_logo.png\" style={{height:\"50px\"}} alt=\"Github logo\"/>\n                                </a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table><br></br>\n            </div>\n         );\n    }\n}","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { BattleLine } from './Game';\nimport { BattleLineBoard } from './Board';\nimport { BattleLineLobby } from './Lobby';\nimport { Header } from './Header';\n\nconst BattleLineClient = Client({\n  game: BattleLine,\n  board: BattleLineBoard,\n  // ONLINE:\n  multiplayer: SocketIO({ server: 'https://battleline-backend.herokuapp.com' }),\n  // LOCAL:\n  // multiplayer: SocketIO({ server: 'localhost:8000' }),\n  // END\n});\n\n// ONLINE:\nconst App = () => (\n  <div>\n    <Header/>\n    <BattleLineLobby\n    gameServer={'https://battleline-backend.herokuapp.com'}\n    lobbyServer={'https://battleline-backend.herokuapp.com'}\n    gameComponents={[{game: BattleLine, board: BattleLineBoard}]}\n    />\n  </div>\n)\n\n// LOCAL:\n// const App = () => (\n//   <div>\n//     <Header/>\n//     <BattleLineClient/>\n//   </div>\n// )\n// END\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}