{"version":3,"sources":["Game.js","BoardComponents.js","Board.js","Lobby.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_TROOP_DECK","TROOP_DECK_COLORS","TROOP_DECK_VALUES","VALUE_MAP","Map","VALUE_MAP_REVERSE","TACTICS_VALUE_MAP","FORMATION_STRENGTH_MAP","i","j","card","push","DEFAULT_TACTICS_DECK","BattleLine","name","setup","troop_deck","slice","tactics_deck","unseen_cards","board_cards","Array","fill","discards","flag_statuses","shuffle_array","player_hands","pop","seen_cards","tactics_played","leaders_played","minPlayers","maxPlayers","moves","playCard","G","ctx","flag","displaced_card","numMoves","INVALID_MOVE","card_str","currentPlayer","isTroopCard","isMoraleTacticsCard","isDisplacementCard","flagHasMud","countFormationCards","isTacticsCard","isLeaderTacticsCard","displaced_card_str","isFormationCard","indexOf","splice","ind","claimFlag","move","has_fog","formations","length","flagHasFog","has_mud","player_id","formation","formation_opp","parseInt","getFormations","formation_strength","required_cards","sum_value","sumValue","flush_value","flushValue","straight_value","straightValue","set_value","setValue","formationStrength","formation_strength_opp","pot","potentialStraightFlush","formation_new","unseen_cards_new","potentialSet","potentialFlush","potentialStraight","potentialSum","potentialFormationStrength","formation_strength1","formation_strength2","get","isStrongestFormation","noLimit","drawCard","deck","events","endTurn","client","passTurn","canPassTurn","playerView","playerID","troop_deck_stripped","tactics_deck_stripped","player_hands_stripped","opp_hand_stripped","stripSecrets","endIf","count","count_consecutive","IsVictory","winner","color","val","vals","str_orig","highest_value","highest","diff","Math","abs","max_diff","straightValueAux","values","Set","setIntersection","size","next","value","set1","set2","filter","x","has","sum","arr","k","floor","random","temp","hand","have_troop_card","canPlayTroopCard","canDisplaceCard","flag_id","COLOR_MAP","TACTICS_FORMAT_MAP","Card","props","cardRefs","React","createRef","height","side","this","updateCanvas","current","getContext","clearRect","translate","selected","str","drawTroopCardFront","drawTacticsCardFront","drawCardOutline","fillStyle","fillRect","card_width","card_height","font","textAlign","fillText","drawTroopCardBack","drawTacticsCardBack","ref","width","Component","Formation","formationRefs","cards","highlights","show_flag","drawFlag","Flag","flagRefs","highlight","lineHeight","measureText","padding","width_1","width_0","reduce_spacing","lineWidth","beginPath","moveTo","lineTo","stroke","rotate","PI","format","text","font_size","drawIcon","toString","console","log","corner_radius","fill_color","strokeStyle","arcTo","closePath","y_offset","img","document","getElementById","drawImage","y","b1","b2","p1","p2","p3","v1","v2","drawLeaderIcon","offset","drawCompanionCavalryIcon","drawShieldBearersIcon","p4","p5","p6","p7","drawTraitorIcon","drawDeserterIcon","drawRedeployIcon","pow","r","sqrt","alpha","atan","arc","drawScoutIcon","drawMudIcon","drawFogIcon","BattleLineBoard","selected_card","card_id","forceUpdate","event","rect","target","getBoundingClientRect","bottom","clientY","top","n_cards","boundary_y","new_displaced_card","arraysEqual","deck_name","tbody","cells","text_display","undefined","gameover","key","style","onClick","onClickCard","rowSpan","id","margin","onClickSlot","onClickDeck","pass_display","type","display","onClickPass","onClickFlag","arr1","arr2","BattleLineLobby","setState","playerName","_createRoom","_updateConnection","gameID","_joinRoom","_leaveRoom","_enterLobby","state","_exitLobby","_startGame","numPlayers","_exitRoom","rooms_thead","rooms_th","room_id_col_style","player_name_col_style","vs_col_style","button_col_style","handleNewRoom","handleRefreshRooms","rooms_tbody","rooms_row","room","connection","rooms","player1_name","players","player2_name","handleJoinRoom","handleLeaveRoom","handleStartGame","phase","onChange","handleChangeName","handleEnterLobby","handleExitLobby","board_element","createElement","runningGame","app","credentials","Lobby","Header","bgcolor","fontFamily","fontSize","href","textDecoration","src","alt","App","Client","game","board","multiplayer","SocketIO","server","gameServer","lobbyServer","gameComponents","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4913ee9.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core';\n\nvar DEFAULT_TROOP_DECK = [];\nvar TROOP_DECK_COLORS = [\"r\",\"o\",\"y\",\"g\",\"b\",\"p\"];\nvar TROOP_DECK_VALUES = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"T\"];\nvar VALUE_MAP = new Map([[\"1\",1],[\"2\",2],[\"3\",3],[\"4\",4],[\"5\",5],[\"6\",6],[\"7\",7],[\"8\",8],[\"9\",9],[\"T\",10]]);\nvar VALUE_MAP_REVERSE = new Map([[1,\"1\"],[2,\"2\"],[3,\"3\"],[4,\"4\"],[5,\"5\"],[6,\"6\"],[7,\"7\"],[8,\"8\"],[9,\"9\"],[10,\"T\"]]);\nvar TACTICS_VALUE_MAP = new Map([[\"ALX\", [10,9,8,7,6,5,4,3,2,1]],[\"DAR\", [10,9,8,7,6,5,4,3,2,1]],[\"CAV\", [8]], [\"321\", [3,2,1]]])\nvar FORMATION_STRENGTH_MAP = new Map([[\"straightflush\",5],[\"set\",4],[\"flush\",3],[\"straight\",2],[\"sum\",1],[\"incomplete\",0]]);\n\nfor(let i = 0; i !== 10; i++){\n  for(let j = 0; j !== 6; j++){\n    let card = TROOP_DECK_VALUES[i]+TROOP_DECK_COLORS[j];\n    DEFAULT_TROOP_DECK.push(card);\n  }\n}\nvar DEFAULT_TACTICS_DECK = [\"ALX\",\"DAR\",\"CAV\",\"321\",\"TRA\",\"DES\",\"RDP\",\"SCT\",\"FOG\",\"MUD\"];\n\nexport const BattleLine = {\n  name: \"battle-line\",\n  setup: () => {\n                let troop_deck = DEFAULT_TROOP_DECK.slice();\n                let tactics_deck = DEFAULT_TACTICS_DECK.slice();\n                let unseen_cards = DEFAULT_TROOP_DECK.slice();\n                let board_cards = new Array(9).fill(new Array(2).fill([]))\n                let discards = new Array(2).fill([])\n                let seen_cards = [];\n\n                let flag_statuses = new Array(9).fill(null);\n                shuffle_array(troop_deck);\n                shuffle_array(tactics_deck);\n                let player_hands = [];\n                player_hands.push([]);\n                player_hands.push([]);\n                for(let i = 0; i !== 7; i++){\n                  for(let j = 0; j !== 2; j++){\n                    player_hands[j].push(troop_deck.pop()); \n                  }\n                }\n\n                return { troop_deck: troop_deck,\n                  tactics_deck: tactics_deck,\n                  player_hands: player_hands,\n                  board_cards: board_cards,\n                  discards: discards,\n                  unseen_cards: unseen_cards,\n                  seen_cards: seen_cards,\n                  flag_statuses: flag_statuses,\n                  tactics_played: [0,0],\n                  leaders_played: [0,0]\n                }},\n  minPlayers: 2,\n  maxPlayers: 2,\n  moves: {\n    playCard: (G, ctx, card, flag, displaced_card = null) => {\n      if (ctx.numMoves > 0){\n        return INVALID_MOVE;\n      }\n      let card_str = G.player_hands[ctx.currentPlayer][card];\n      if (flag !== -1 && (isTroopCard(card_str) || isMoraleTacticsCard(card_str) || isDisplacementCard(card_str))){\n        if (flagHasMud(G.board_cards[flag])){\n          if (countFormationCards(G.board_cards[flag][ctx.currentPlayer]) === 4){\n            return INVALID_MOVE;\n          }\n        }\n        else{\n          if (countFormationCards(G.board_cards[flag][ctx.currentPlayer]) === 3){\n            return INVALID_MOVE;\n          }\n        }\n      }\n      if (flag !== -1 && G.flag_statuses[flag] !== null){\n        return INVALID_MOVE;\n      }\n      if (isTacticsCard(card_str)){\n        if (ctx.currentPlayer === '0' && G.tactics_played[0] > G.tactics_played[1]){\n          return INVALID_MOVE;\n        }\n        if (ctx.currentPlayer === '1' && G.tactics_played[1] > G.tactics_played[0]){\n          return INVALID_MOVE;\n        }\n      }\n      if (isLeaderTacticsCard(card_str) && G.leaders_played[ctx.currentPlayer] > 0){\n        return INVALID_MOVE;\n      }\n      if (isDisplacementCard(card_str)){\n        if (displaced_card === null){\n          return INVALID_MOVE;\n        }\n        if (G.flag_statuses[displaced_card[0]] !== null){\n          return INVALID_MOVE;\n        }\n        let displaced_card_str = G.board_cards[displaced_card[0]][displaced_card[1]][displaced_card[2]];\n        if (card_str === \"TRA\"){\n          if (displaced_card[1] === ctx.currentPlayer || isTacticsCard(displaced_card_str) || flag === -1){\n            return INVALID_MOVE;\n          }\n        }\n        else if (card_str === \"DES\"){\n          if (displaced_card[1] === ctx.currentPlayer || !isFormationCard(displaced_card_str) || flag !== -1){\n            return INVALID_MOVE;\n          }\n        }\n        else if(card_str === \"RDP\"){\n          if (displaced_card[1] !== ctx.currentPlayer || !isFormationCard(displaced_card_str) || flag === displaced_card[0]){\n            return INVALID_MOVE;\n          }\n        }\n      }\n      else if (flag === -1){\n        return INVALID_MOVE;\n      }\n      if ([\"SCT\"].indexOf(card_str) >= 0){\n        return INVALID_MOVE;\n      }\n\n      if (isDisplacementCard(card_str)){\n        let displaced_card_str = G.board_cards[displaced_card[0]][displaced_card[1]][displaced_card[2]];\n        G.board_cards[displaced_card[0]][displaced_card[1]].splice(displaced_card[2], 1);\n        if (flag !== -1){\n          G.board_cards[flag][ctx.currentPlayer].push(displaced_card_str);\n        }\n        else{\n          G.discards[displaced_card[1]].push(displaced_card_str);\n        }\n        G.discards[ctx.currentPlayer].push(card_str);\n      }\n      else{\n        G.board_cards[flag][ctx.currentPlayer].push(card_str); \n      }\n      G.seen_cards.push(card_str);\n      if (isTacticsCard(card_str)){\n        G.tactics_played[ctx.currentPlayer]++;\n      }\n      if (isLeaderTacticsCard(card_str)){\n        G.leaders_played[ctx.currentPlayer]++;\n      }\n      var ind = G.unseen_cards.indexOf(card_str);\n      if (ind !== -1){\n        G.unseen_cards.splice(ind,1);\n      }\n      G.player_hands[ctx.currentPlayer].splice(card, 1);\n    },\n    claimFlag: {\n      move: (G, ctx, flag) => {\n        if (G.flag_statuses[flag] !== null){\n          return INVALID_MOVE;\n        }\n        let has_fog = flagHasFog(G.board_cards[flag]);\n        let has_mud = flagHasMud(G.board_cards[flag]);\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        if (!isStrongestFormation(formations[0], formations[1], G.unseen_cards, has_fog, has_mud)){\n          return INVALID_MOVE;\n        }\n        G.flag_statuses[flag] = ctx.currentPlayer;\n      },\n      noLimit: true\n    },\n    drawCard: {\n      move: (G, ctx, deck) => {\n        if (ctx.numMoves === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop' && G.troop_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'tactics' && G.tactics_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop'){\n          G.player_hands[ctx.currentPlayer].push(G.troop_deck.pop());\n        }\n        else if (deck === 'tactics'){\n          G.player_hands[ctx.currentPlayer].push(G.tactics_deck.pop());\n        }\n        else{\n          return INVALID_MOVE;\n        }\n        ctx.events.endTurn();\n      },\n      client: false\n    },\n    passTurn: (G, ctx) => {\n      if (!canPassTurn(G, ctx)){\n        return INVALID_MOVE\n      }\n      ctx.events.endTurn();\n    }\n  },\n  playerView: (G, ctx, playerID) => {return stripSecrets(G, playerID)},\n\n  // },\n  endIf: (G, ctx) => {\n    if (IsVictory(G.flag_statuses, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer};\n    }\n  },\n};\n\n// Return true if `cells` is in a winning configuration.\nfunction IsVictory(flag_statuses, player_id) {\n  var count = 0;\n  var count_consecutive = 0;\n  for (let i = 0; i !== 9; i++){\n    if (flag_statuses[i] === player_id){\n      count++;\n      count_consecutive++;\n    }\n    else{\n      count_consecutive = 0;\n    }\n    if (count >= 5 || count_consecutive >= 3){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getFormations(flag, player_id, board_cards){\n  var formation = [];\n  var formation_opp = [];\n  for(let i = 0; i !== 2; i++){\n    for(let j = 0; j !== board_cards[flag][i].length; j++){\n      if(i === parseInt(player_id)){\n        if (isFormationCard(board_cards[flag][i][j])){\n          formation.push(board_cards[flag][i][j]);\n        }\n      }\n      else {\n        if (isFormationCard(board_cards[flag][i][j])){\n          formation_opp.push(board_cards[flag][i][j]);\n        }\n      }\n    }\n  }\n  return [formation, formation_opp];\n}\n\nfunction isStrongestFormation(formation, formation_opp, unseen_cards, has_fog, has_mud){\n  var formation_strength = formationStrength(formation, has_fog, has_mud);\n  var formation_strength_opp = potentialFormationStrength(formation_opp, unseen_cards, has_fog, has_mud);\n  return formationStrengthComparison(formation_strength, formation_strength_opp);\n}\n\nfunction formationStrengthComparison(formation_strength1, formation_strength2){\n  if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) > FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return true;\n  }\n  else if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) < FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return false;\n  }\n  else if (formation_strength1[1] >= formation_strength2[1]){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nfunction formationStrength(formation, has_fog, has_mud){\n  let required_cards = has_mud ? 4:3;\n  if (formation.length !== required_cards){\n    return ['incomplete', 0];\n  }\n  var sum_value = sumValue(formation);\n  if (has_fog){\n    return ['sum', sum_value];\n  }\n\n  var flush_value = flushValue(formation);\n  var straight_value = straightValue(formation, has_mud);\n  var set_value = setValue(formation);\n\n  if (flush_value !== -1 && straight_value !== -1){\n    return ['straightflush', straight_value];\n  }\n  else if (set_value !== -1){\n    return ['set', set_value];\n  }\n  else if (flush_value !== -1){\n    return ['flush', flush_value];\n  }\n  else if (straight_value !== -1){\n    return ['straight', straight_value];\n  }\n  else{\n    return ['sum', sum_value];\n  }\n}\n\nfunction flushValue(formation){\n  let color = null;\n  let val = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      val += VALUE_MAP.get(formation[i][0]);\n      if (color === null){\n        color = formation[i][1];\n      }\n      else if(color !== formation[i][1]){\n        return -1;\n      }\n    }\n    else{\n      val += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return val;\n}\nfunction straightValue(formation, has_mud){\n  for (let i = 0; i !== formation.length; i++){\n    if (!isTroopCard(formation[i])){\n      let vals = TACTICS_VALUE_MAP.get(formation[i]);\n      let str_orig = formation[i];\n      let highest_value = -1;\n      for (let j = 0; j !== vals.length; j++){\n        formation[i] = VALUE_MAP_REVERSE.get(vals[j]) + 'x';\n        let val = straightValue(formation, has_mud);\n        if (val > highest_value){\n          highest_value = val;\n        }\n      }\n      formation[i] = str_orig;\n      return highest_value;\n    }\n  }\n  return straightValueAux(formation, has_mud);\n}\n\nfunction straightValueAux(formation, has_mud){\n  let highest = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (VALUE_MAP.get(formation[i][0]) > highest){\n      highest = VALUE_MAP.get(formation[i][0]);\n    }\n    for (let j = i+1; j !== formation.length; j++){\n      var diff = Math.abs(VALUE_MAP.get(formation[i][0]) - VALUE_MAP.get(formation[j][0]));\n      let max_diff = has_mud ? 3:2;\n      if (diff === 0 || diff > max_diff){\n        return -1;\n      }  \n    }\n  }\n  return formation.length*(2*highest - formation.length + 1)/2;\n}\n\nfunction setValue(formation){\n  var values = new Set([1,2,3,4,5,6,7,8,9,10]);\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      values = setIntersection(values, new Set([VALUE_MAP.get(formation[i][0])]));\n    }\n    else{\n      values = setIntersection(values, new Set(TACTICS_VALUE_MAP.get(formation[i])));\n    }\n    if (values.size === 0){\n      return -1;\n    }\n  }\n  return values.values().next().value*formation.length;\n}\n\nfunction setIntersection(set1, set2){\n  return new Set([...set1].filter(x => set2.has(x)));\n}\n\nfunction sumValue(formation){\n  var sum = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (formation[i].length === 2){\n      sum += VALUE_MAP.get(formation[i][0]);\n    }\n    else{\n      sum += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return sum;\n}\n\nfunction potentialFormationStrength(formation, unseen_cards, has_fog, has_mud){\n  let pot = -1;\n  if (!has_fog){\n    pot = potentialStraightFlush(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['straightflush', pot];\n    }\n    pot = potentialSet(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['set', pot];\n    }\n    pot = potentialFlush(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['flush', pot];\n    }\n    pot = potentialStraight(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['straight', pot];\n    }\n  }\n  pot = potentialSum(formation, unseen_cards, has_mud);\n  if (pot !== -1){\n    return ['sum', pot];\n  }\n  return ['incomplete', pot];\n}\n\nfunction potentialStraightFlush(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  let straight_value = straightValue(formation, has_mud);\n\n  if (flush_value === -1 || straight_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n    return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraightFlush(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSet(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let set_value = setValue(formation);\n\n  if (set_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return set_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSet(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialFlush(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  if (flush_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return flush_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialFlush(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialStraight(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let straight_value = straightValue(formation, has_mud);\n  if (straight_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraight(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSum(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let sum_value = sumValue(formation);\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return sum_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSum(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\n\nfunction shuffle_array(arr){\n  for(let i = arr.length-1; i >= 0; i--){\n    var k = Math.floor(Math.random()*(i+1));\n    var temp = arr[k];\n    arr[k] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n}\n\nfunction stripSecrets(G, playerID){\n  var troop_deck_stripped = new Array(G.troop_deck.length).fill(\"troop\");\n  var tactics_deck_stripped = new Array(G.tactics_deck.length).fill(\"tactics\");\n  var player_hands_stripped = [];\n  for (let i = 0; i !== 2; i++){\n    if(parseInt(playerID) === i){\n      player_hands_stripped.push(G.player_hands[i]);\n    }\n    else{\n      var opp_hand_stripped = [];\n      for (let j = 0; j !== G.player_hands[i].length; j++){\n        if (isTroopCard(G.player_hands[i][j]) || G.player_hands[i][j] === 'troop'){\n          opp_hand_stripped.push('troop');\n        }\n        else{\n          opp_hand_stripped.push('tactics');\n        }\n      }\n      player_hands_stripped.push(opp_hand_stripped);\n    }\n  }\n\n  var G_stripped = {troop_deck: troop_deck_stripped,\n                    tactics_deck: tactics_deck_stripped,\n                    player_hands: player_hands_stripped,\n                    board_cards: G.board_cards,\n                    discards: G.discards,\n                    unseen_cards: G.unseen_cards,\n                    seen_cards: G.seen_cards,\n                    flag_statuses: G.flag_statuses,\n                    tactics_played: G.tactics_played,\n                    leaders_played: G.leaders_played};\n  return G_stripped;\n}\n\nfunction canPlayTroopCard(board_cards, player_id, flag_statuses, hand){\n  let have_troop_card = false;\n  for (let i = 0; i !== hand.length && !have_troop_card; i++){\n    if (isTroopCard(hand[i])){\n      have_troop_card = true;\n    }\n  }\n  if (!have_troop_card){\n    return false;\n  }\n  for (let i = 0; i !== 9; i++){\n    if (board_cards[i][player_id].length !== 3 && flag_statuses[i] === null){\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function canPassTurn(G, ctx){\n  if (ctx.numMoves === 0){\n    return !canPlayTroopCard(G.board_cards, ctx.currentPlayer, G.flag_statuses, G.player_hands[ctx.currentPlayer]); \n  }\n  else{\n    return G.troop_deck.length === 0 && G.tactics_deck.length === 0;\n  }\n}\n\nexport function canDisplaceCard(G, ctx, card_str, displaced_card_str, player_id, flag_id){\n  if (!isFormationCard(displaced_card_str)){\n    return false;\n  }\n  if (G.flag_statuses[flag_id] !== null){\n    return false;\n  }\n  if (card_str === \"TRA\" && (player_id === ctx.currentPlayer || isTacticsCard(displaced_card_str))){\n    return false;\n  }\n  if (card_str === \"DES\" && player_id === ctx.currentPlayer){\n    return false;\n  }\n  if (card_str === \"RDP\" && player_id !== ctx.currentPlayer){\n    return false;\n  }\n  return true;\n} \n\nfunction isTroopCard(card){\n  return card.length === 2;\n}\nexport function isTacticsCard(card){\n  return card.length === 3;\n}\n\nfunction isMoraleTacticsCard(card){\n  return [\"ALX\",\"DAR\",\"CAV\",\"321\"].indexOf(card) >= 0;\n}\n\nfunction isLeaderTacticsCard(card){\n  return [\"ALX\",\"DAR\"].indexOf(card) >= 0;\n}\n\nexport function isDisplacementCard(card){\n  return [\"TRA\",\"DES\",\"RDP\"].indexOf(card) >= 0;\n}\n\nexport function isScoutCard(card){\n  return [\"SCT\"].indexOf(card) >= 0;\n}\n\nfunction isFormationCard(card){\n  return isTroopCard(card) || isMoraleTacticsCard(card);\n}\n\nfunction countFormationCards(formation){\n  let count = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isFormationCard(formation[i])){\n      count++;\n    }\n  }\n  return count;\n}\n\nfunction flagHasFog(formations){\n  for (let i = 0; i !== 2; i++){\n    for (let j = 0; j !== formations[i].length; j++){\n      if (formations[i][j] === \"FOG\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction flagHasMud(formations){\n  for (let i = 0; i !== 2; i++){\n    for (let j = 0; j !== formations[i].length; j++){\n      if (formations[i][j] === \"MUD\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import React from 'react';\n\nvar COLOR_MAP = new Map([[\"r\",\"#FF0000\"],[\"o\",\"#FFA500\"],[\"y\",\"#FFFF00\"],[\"g\",\"#008000\"],[\"b\",\"#0000FF\"],[\"p\",\"#800080\"]]);\nvar TACTICS_FORMAT_MAP = new Map([[\"ALX\",[[\"ALEXANDER\"],6]],[\"DAR\",[[\"DARIUS\"],9]],[\"CAV\",[[\"COMPANION\",\"CAVALRY\"],6]],[\"321\",[[\"SHIELD\",\"BEARERS\"],8]],[\"TRA\",[[\"TRAITOR\"],9]],[\"DES\",[[\"DESERTER\"],7]],[\"RDP\",[[\"REDEPLOY\"],7]],[\"SCT\",[[\"SCOUT\"],9]],[\"FOG\",[[\"FOG\"],9]],[\"MUD\",[[\"MUD\"],9]]]);\n\n\nexport class Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cardRefs = React.createRef();\n        this.height = this.props.side === 'deck' ? 120:150;\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.cardRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, this.height);\n        let translate = (this.props.side === 'top' && this.props.selected) ||  (this.props.side === 'bottom' && !this.props.selected) || this.props.side === 'deck' ? 0:30;\n        ctx.translate(0,translate);\n        if (this.props.str.length === 2){\n            drawTroopCardFront(ctx, this.props.str, null);\n        }\n        else if (this.props.str.length === 3){\n            drawTacticsCardFront(ctx, this.props.str, null);\n        }\n        else if (this.props.str === 'troop'){\n            drawTroopCardBack(ctx);\n        }\n        else if (this.props.str === 'tactics'){\n            drawTacticsCardBack(ctx);\n        }\n        ctx.translate(0,-translate);\n    }\n\n    render() {\n         return (\n             <canvas ref={this.cardRefs} width={80} height={this.height}/>\n         );\n    }\n}\n\nexport class Formation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formationRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.formationRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 295);\n        if (this.props.side === 'top'){\n            ctx.translate(0,175);\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                ctx.translate(0,-35);\n            }\n            ctx.translate(0,-35*(5-this.props.cards.length))\n        }\n        else{\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                ctx.translate(0,35);\n            }\n            ctx.translate(0,-35*this.props.cards.length)\n        }\n        if (this.props.show_flag){\n            let y_offset = this.props.side === 'top' ? 35*(7-this.props.cards.length):35*this.props.cards.length;\n            drawFlag(ctx, y_offset);\n        }\n        \n    }\n\n    render() {\n         return (\n             <canvas ref={this.formationRefs} width={80} height={295}/>\n         );\n    }   \n}\n\nexport class Flag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.flagRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.flagRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 50);\n        if (this.props.show_flag){\n            drawFlag(ctx, 0);\n        }\n    }\n    render() {\n         return (\n             <canvas ref={this.flagRefs} width={80} height={50}/>\n         );\n    }   \n}\n\nfunction drawTroopCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n    let val = card_str[0];\n    let color = card_str[1];\n\n    if (highlight === null){\n        highlight = \"#FFFFFF\";\n    }\n    drawCardOutline(ctx, card_width, card_height, 7, highlight);\n    ctx.fillStyle = COLOR_MAP.get(color);\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    ctx.font = \"18px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    for (let i = 0; i !== 2; i++){\n        if (val !== 'T'){\n            ctx.fillText(val, padding + inset_width/2, padding + inset_height/2 + lineHeight/2 - 2); \n        }\n        else{\n            let reduce_spacing = 4;\n            let width_1 = ctx.measureText('1').width;\n            let width_0 = ctx.measureText('0').width;\n\n            ctx.fillText('1', padding + inset_width/2 - width_1/2 + reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2); \n            ctx.fillText('0', padding + inset_width/2 + width_0/2 - reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2);\n        }\n        if (val === '6' || val === '9'){\n            let width = ctx.measureText(val).width;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(padding + inset_width/2 - width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.lineTo(padding + inset_width/2 + width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.stroke();\n        }\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n}\n\nfunction drawTroopCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#000000\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TROOP', card_width/2, card_height/2)\n}\n\nfunction drawTacticsCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n\n    if (highlight === null){\n        highlight = \"#FFFFFF\";\n    }\n    drawCardOutline(ctx, card_width, card_height, 7, highlight);\n    ctx.fillStyle = \"#E4DB86\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    let format = TACTICS_FORMAT_MAP.get(card_str);\n    let text = format[0];\n    let font_size = format[1];\n    drawIcon(card_str, ctx, card_width/2, card_height/2, 40, 40);\n\n    for (let i = 0; i !== 2; i++){\n        ctx.font = font_size.toString() + \"px Verdana\";\n        ctx.fillStyle = \"#000000\";\n        ctx.textAlign = \"center\";\n        let lineHeight = ctx.measureText('M').width;\n        for (let j = 0; j !== text.length; j++){\n            ctx.fillText(text[j], (card_width + inset_width)/2, (35+padding+lineHeight*text.length)/2 - lineHeight*(text.length - 1 - j));\n        }\n        drawIcon(card_str, ctx, padding + inset_width/2, padding + inset_height/2 - 2, 18, 18);\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n    if (format.length === 3){\n        console.log(format[2]);\n        format[2]();\n    }\n}\n\nfunction drawTacticsCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#855040\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TACTICS', card_width/2, card_height/2);\n}\n\nfunction drawCardOutline(ctx, width, height, corner_radius, fill_color){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = fill_color;\n    let lineWidth = 2;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(corner_radius+lineWidth/2, lineWidth/2);\n    ctx.lineTo(width-corner_radius-lineWidth/2, lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, lineWidth/2, width-lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(width-lineWidth/2, height-corner_radius-lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, height-lineWidth/2, width-corner_radius-lineWidth/2, height-lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(corner_radius+lineWidth/2, height-lineWidth/2);\n    ctx.arcTo(lineWidth/2, height-lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(lineWidth/2, corner_radius+lineWidth/2);\n    ctx.arcTo(lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, lineWidth/2, corner_radius+lineWidth/2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawFlag(ctx, y_offset){\n    var img = document.getElementById(\"flag\");\n    ctx.drawImage(img, 15, y_offset, 50, 50);\n}\n\nfunction drawIcon(card_str, ctx, x, y, width, height) {\n    if (card_str === \"ALX\" || card_str === \"DAR\"){\n        drawLeaderIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"CAV\"){\n        drawCompanionCavalryIcon(ctx, x, y, height);\n    }\n    else if (card_str === \"321\"){\n        drawShieldBearersIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"TRA\"){\n        drawTraitorIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"DES\"){\n        drawDeserterIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"RDP\"){\n        drawRedeployIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"SCT\"){\n        drawScoutIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"MUD\"){\n        drawMudIcon(ctx, x, y, height);\n    }\n    else if (card_str === \"FOG\"){\n        drawFogIcon(ctx, x, y, height);\n    }\n}\n\nfunction drawLeaderIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    width = 0.9*width-4;\n    height = 0.9*height;\n    let b1 = [x-width/3,y+height/2];\n    let b2 = [x+width/3,y+height/2];\n    let p1 = [x-width/2,y-height/2+2];\n    let p2 = [x,y-height/2+2];\n    let p3 = [x+width/2,y-height/2+2];\n    let v1 = [x-width/6,y];\n    let v2 = [x+width/6,y];\n    ctx.beginPath();\n    ctx.moveTo(b1[0], b1[1]);\n    ctx.lineTo(p1[0], p1[1]);\n    ctx.lineTo(v1[0], v1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(v2[0], v2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(b2[0], b2[1]);\n    ctx.lineTo(b1[0], b1[1]);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawCompanionCavalryIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"8\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawShieldBearersIcon(ctx, x, y, width, height){\n    ctx.font = (height/2).toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"321\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawTraitorIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    width = 0.4*width-4;\n    height = 0.9*height;\n    let p1 = [x-0.2*width,y-height/2+2];\n    let p2 = [x+0.2*width,y-height/2+2];\n    let p3 = [x+0.2*width,y+height/2-width];\n    let p4 = [x+width,y+height/2-width];\n    let p5 = [x,y+height/2];\n    let p6 = [x-width,y+height/2-width];\n    let p7 = [x-0.2*width,y+height/2-width];\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.lineTo(p5[0], p5[1]);\n    ctx.lineTo(p6[0], p6[1]);\n    ctx.lineTo(p7[0], p7[1]);\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawDeserterIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n\n    width = 0.7*width-4;\n    height = 0.9*height;\n    let lineWidth = height/5;\n    ctx.lineWidth = lineWidth;\n    let p1 = [x-width/2,y-height/2+2];\n    let p2 = [x+width/2,y-height/2+2];\n    let p3 = [x-width/2,y+height/2];\n    let p4 = [x+width/2,y+height/2];\n\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.moveTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.stroke();\n}\n\nfunction drawRedeployIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    height = 0.4*height-4;\n    width = 0.9*width-4;\n    let p1 = [x-width/2,y-0.2*height];\n    let p2 = [x-width/2,y+0.2*height];\n    let p3 = [x+width/2-height,y+0.2*height];\n    let p4 = [x+width/2-height,y+height];\n    let p5 = [x+width/2,y];\n    let p6 = [x+width/2-height,y-height];\n    let p7 = [x+width/2-height,y-0.2*height];\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.lineTo(p5[0], p5[1]);\n    ctx.lineTo(p6[0], p6[1]);\n    ctx.lineTo(p7[0], p7[1]);\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawScoutIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n\n    width = 0.9*width-4;\n    height = width*0.5;\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n\n    let k = (Math.pow(height/2,2)-Math.pow(width/2,2))/height;\n    let r = Math.sqrt(Math.pow(width/2,2)+Math.pow(k,2));\n    let alpha = Math.atan(k*2/width);\n\n    ctx.beginPath();\n    ctx.moveTo(x+width/2,y);\n    ctx.arc(x, y-k, r, alpha, Math.PI-alpha, true);\n    ctx.arc(x, y+k, r, Math.PI+alpha,-alpha, true);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(x+height*0.2, y);\n    ctx.arc(x, y, height*0.2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(x+height*0.5,y);\n    ctx.arc(x, y, height*0.5, 0, 2 * Math.PI, false);\n    ctx.stroke();\n}\n\nfunction drawFogIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"#\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawMudIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"+\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}","import React from 'react';\nimport {Card, Formation, Flag} from './BoardComponents'\nimport {canPassTurn, isDisplacementCard, isScoutCard, canDisplaceCard} from './Game'\n\nexport class BattleLineBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selected_card = null;\n    this.displaced_card = null;\n  }\n  onClickCard(player_id, card_id) {\n    if (this.props.ctx.currentPlayer !== player_id || this.props.ctx.currentPlayer !== this.props.playerID){\n      return;\n    }\n    if (this.selected_card !== card_id){\n      this.selected_card = card_id;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n    else{\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n  }\n  onClickSlot(player_id, flag_id, event) {\n    if (this.selected_card === null){\n      return;\n    }\n    let card_str = this.props.G.player_hands[this.props.ctx.currentPlayer][this.selected_card];\n    if (isDisplacementCard(card_str) && flag_id !== -1){\n      let rect = event.target.getBoundingClientRect();\n      let y_offset = player_id === '0' ? rect.bottom - event.clientY : event.clientY - rect.top;\n      let n_cards = this.props.G.board_cards[flag_id][player_id].length;\n\n      let boundary_y = 0;\n      for (let i = 0; i !== n_cards; i++){\n        let incr_y = (i !== n_cards - 1) ? 35:120;\n        boundary_y += incr_y;\n        if (y_offset < boundary_y){\n          let displaced_card_str = this.props.G.board_cards[flag_id][player_id][i];\n          if(canDisplaceCard(this.props.G, this.props.ctx, card_str, displaced_card_str, player_id, flag_id)){\n            let new_displaced_card = [flag_id, player_id, i];\n            if (this.displaced_card === null){\n              this.displaced_card = new_displaced_card;\n              this.forceUpdate();\n              return;\n            }\n            else if (arraysEqual(this.displaced_card, new_displaced_card)){\n              this.displaced_card = null;\n              this.forceUpdate();\n              return;\n            }\n            else{\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n    if (isDisplacementCard(card_str)){\n      if (this.props.ctx.currentPlayer !== player_id && card_str !== \"DES\"){\n        return;\n      }\n      if (this.displaced_card === null){\n        return;\n      }\n      this.props.moves.playCard(this.selected_card, flag_id, this.displaced_card);\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n    else if (isScoutCard(card_str)){\n\n    }\n    else{\n      if (this.props.ctx.currentPlayer !== player_id){\n        return;\n      }\n      if (flag_id === -1){\n        return;\n      }\n      this.props.moves.playCard(this.selected_card, flag_id);\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n  }\n  onClickFlag(flag_id){\n    this.props.moves.claimFlag(flag_id); \n  }\n  onClickDeck(deck_name){\n    this.props.moves.drawCard(deck_name); \n  }\n  onClickPass(){\n    this.props.moves.passTurn();\n  }\n  render() {\n    let tbody = [];\n\n    let cells = [];\n    let text_display = '';\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '0'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '0'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key ={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[0].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('0', i)}>\n          <Card str={this.props.G.player_hands[0][i]} side={'top'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='0' && this.props.playerID==='0' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    for (let i = 0; i !== 9 - this.props.G.player_hands[0].length; i++){\n      cells.push(\n        <td key={cells.length}></td>\n      );\n    }\n    let highlights = [new Array(this.props.G.discards[0].length).fill(null), new Array(this.props.G.discards[1].length).fill(null)];\n    if (this.props.G.discards[0].length > 0 && this.props.G.discards[0].slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0'){\n      highlights[0][this.props.G.discards[0].length-1] = \"#000000\";\n    }\n    if (this.props.G.discards[1].length > 0 && this.props.G.discards[1].slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1'){\n      highlights[1][this.props.G.discards[1].length-1] = \"#000000\";\n    }\n    cells.push(\n      <td rowSpan=\"5\" key={cells.length}>\n        <table id=\"tactics_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td onClick={(event) => this.onClickSlot('0',-1,event)}>\n                <Formation cards={this.props.G.discards[0]} side={'top'} show_flag={false} highlights={highlights[0]}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={() => this.onClickDeck('tactics')}>\n                <Card str={this.props.G.tactics_deck.length>0 ? this.props.G.tactics_deck[0]:''} side={'deck'}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={(event) => this.onClickSlot('1',-1,event)}>\n                <Formation cards={this.props.G.discards[1]} side={'bottom'} show_flag={false} highlights={highlights[1]}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    let pass_display = new Array(2).fill('none');\n    for (let i = 0; i !== 2; i++){\n      if (this.props.ctx.currentPlayer === this.props.playerID && this.props.ctx.currentPlayer === i.toString() && canPassTurn(this.props.G, this.props.ctx)){\n        pass_display[i] = 'block';\n      }\n    }\n    cells.push(\n      <td rowSpan=\"3\" key={cells.length}>\n        <table id=\"troop_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[0]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'120px'}} onClick={() => this.onClickDeck('troop')}>\n                <Card str={this.props.G.troop_deck.length>0 ? this.props.G.troop_deck[0]:''} side={'deck'}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[1]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][0];\n      let show_flag = this.props.G.flag_statuses[i]==='0';\n      let highlights = new Array(cards.length).fill(null);\n      let last_played = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0';\n      if (last_played){\n        highlights[cards.length-1] = \"#000000\";\n      }\n      if (this.displaced_card !== null && this.displaced_card[0] === i && this.displaced_card[1] === '0'){\n        highlights[this.displaced_card[2]] = \"#AAAAAA\";\n      }\n      cells.push(\n        <td key={cells.length} onClick={(event) => this.onClickSlot('0', i, event)}>\n          <Formation cards={cards} side={'top'} show_flag={show_flag} highlights={highlights}/>\n        </td>\n      );\n    }\n\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickFlag(i)}>\n          <Flag show_flag={this.props.G.flag_statuses[i]===null}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][1];\n      let show_flag = this.props.G.flag_statuses[i]==='1';\n      let highlights = new Array(cards.length).fill(null);\n      let last_played = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1';\n      if (last_played){\n        highlights[cards.length-1] = \"#000000\";\n      } \n      if (this.displaced_card !== null && this.displaced_card[0] === i && this.displaced_card[1] === '1'){\n        highlights[this.displaced_card[2]] = \"#AAAAAA\";\n      }\n      cells.push(\n        <td key={cells.length} onClick={(event) => this.onClickSlot('1',i,event)}>\n          <Formation cards={cards} side={'bottom'} show_flag={show_flag} highlights={highlights}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    text_display = '';\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '1'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '1'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[1].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('1',i)}>\n          <Card str={this.props.G.player_hands[1][i]} side={'bottom'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='1' && this.props.playerID==='1' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    return (\n      <div>\n        <table id=\"board\" style={{margin:\"auto\"}}>\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction arraysEqual(arr1, arr2){\n  if (arr1 === null && arr2 === null){\n    return true;\n  }\n  if (arr1 === null || arr2 === null){\n    return false;\n  }\n  if (arr1.length !== arr2.length){\n    return false;\n  }\n  for (let i = 0; i !== arr1.length; i++){\n    if (arr1[i] !== arr2[i]){\n      return false;\n    }\n  }\n  return true;\n}","import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\n\nexport class BattleLineLobby extends Lobby{\n    handleChangeName(event){\n        this.setState({\n            playerName: event.target.value,\n        });\n    }\n    handleNewRoom(event){\n        this._createRoom('battle-line', 2);\n    }\n    handleRefreshRooms(event){\n        this._updateConnection();\n    }\n    handleJoinRoom(event, gameID, playerID){\n        this._joinRoom('battle-line', gameID, playerID);\n    }\n    handleLeaveRoom(event, gameID){\n        this._leaveRoom('battle-line', gameID);\n    }\n    handleEnterLobby(event){\n        this._enterLobby(this.state.playerName);\n    }\n    handleExitLobby(event){\n        this._exitLobby();\n    }\n    handleStartGame(event, gameID, playerID){\n        this._startGame('battle-line', {numPlayers: 2, gameID: gameID, playerID: playerID});\n    }\n    handleExitRoom(event){\n        this._exitRoom();\n    }\n    render(){\n        var rooms_thead = [];\n        var rooms_th = [];\n\n        const room_id_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const player_name_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const vs_col_style = {\n            width:\"30px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const button_col_style = {\n            width:\"100px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n\n        rooms_th.push(<th style={room_id_col_style}>{'Room ID'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 1'}</th>);\n        rooms_th.push(<th style={vs_col_style}>{'vs.'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 2'}</th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"New Room\" onClick={(event) => this.handleNewRoom(event)}/></th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"Refresh\" onClick={(event) => this.handleRefreshRooms(event)}/></th>);\n        rooms_thead.push(<tr>{rooms_th}</tr>);\n\n        var rooms_tbody = [];\n        for (var i = 0; i !== this.connection.rooms.length; i++){\n            var rooms_row = [];\n            let room = this.connection.rooms[i];\n            var player1_name = (room.players.length > 0) ? room.players[0].name:undefined;\n            var player2_name = (room.players.length > 1) ? room.players[1].name:undefined;\n\n            rooms_row.push(<td style={room_id_col_style}>{room.gameID}</td>);\n            if (player1_name !== undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player1_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 0)}/></td>);\n            }\n            rooms_row.push(<td style={vs_col_style}>{'vs.'}</td>);\n            if (player2_name !== undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player2_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 1)}/></td>);\n            }    \n\n            if (player1_name === this.state.playerName || player2_name === this.state.playerName){\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Leave\" onClick={(event) => this.handleLeaveRoom(event, room.gameID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            if((player1_name === this.state.playerName && player2_name !== undefined) || (player2_name === this.state.playerName && player1_name !== undefined)){\n                let playerID = this.state.playerName === player1_name ? '0':'1';\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Play\" onClick={(event) => this.handleStartGame(event, room.gameID, playerID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            rooms_tbody.push(<tr>{rooms_row}</tr>);\n        }\n\n        // var errMsg = this.state.errorMsg !== '' ? 'Error: ' + this.state.errorMsg:'';\n\n        if (this.state.phase === 'enter'){\n            return (\n                <div>\n                    {'Enter name: '}\n                    <input type=\"text\" value={this.state.playerName} onChange={(event) => this.handleChangeName(event)}/>\n                    <input type=\"button\" value=\"Enter Lobby\" onClick={(event) => this.handleEnterLobby(event)}/>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'list'){\n            return (\n                <div>\n                    <input type=\"button\" value=\"Exit Lobby\" onClick={(event) => this.handleExitLobby(event)}/>\n                    <br></br>\n                    <table id=\"rooms\">\n                        <thead>\n                            {rooms_thead}\n                        </thead>\n                        <tbody>\n                            {rooms_tbody}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'play'){\n            var board_element = React.createElement(this.state.runningGame.app, {\n                gameID: this.state.runningGame.gameID,\n                playerID: this.state.runningGame.playerID,\n                credentials: this.state.runningGame.credentials\n            });\n            return (\n                <div>\n                    {board_element}\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\n\nexport class Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <table style={{width:\"100%\"}} bgcolor=\"#E4DB86\">\n                    <tbody>\n                        <tr>\n                            <td style={{fontFamily:\"Verdana\", fontSize:\"30px\",padding:\"10px\"}}>\n                                <a href=\"https://rsandzimier.github.io/battleline/\" style={{color:\"inherit\", textDecoration:\"none\"}}>\n                                    BATTLE LINE\n                                </a>\n                            </td>\n                            <td style={{textAlign:\"right\"}}>\n                                <a href=\"https://github.com/rsandzimier/battleline\">\n                                    <img id=\"github\" src=\"https://raw.githubusercontent.com/rsandzimier/battleline/master/github_logo.png\" style={{height:\"50px\"}} alt=\"Github logo\"/>\n                                </a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table><br></br>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { BattleLine } from './Game';\nimport { BattleLineBoard } from './Board';\nimport { BattleLineLobby } from './Lobby';\nimport { Header } from './Header';\n\nconst BattleLineClient = Client({\n  game: BattleLine,\n  board: BattleLineBoard,\n  // ONLINE:\n  multiplayer: SocketIO({ server: 'https://battleline-backend.herokuapp.com' }),\n  // LOCAL:\n  // multiplayer: SocketIO({ server: 'localhost:8000' }),\n  // END\n});\n\n// ONLINE:\nconst App = () => (\n  <div>\n    <Header/>\n    <BattleLineLobby\n    gameServer={'https://battleline-backend.herokuapp.com'}\n    lobbyServer={'https://battleline-backend.herokuapp.com'}\n    gameComponents={[{game: BattleLine, board: BattleLineBoard}]}\n    />\n  </div>\n)\n\n// LOCAL:\n// const App = () => (\n//   <div>\n//     <Header/>\n//     <BattleLineClient/>\n//   </div>\n// )\n// END\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}