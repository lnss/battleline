{"version":3,"sources":["Game.js","BoardComponents.js","Board.js","Lobby.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_TROOP_DECK","TROOP_DECK_COLORS","TROOP_DECK_VALUES","VALUE_MAP","Map","VALUE_MAP_REVERSE","TACTICS_VALUE_MAP","FORMATION_STRENGTH_MAP","i","j","card","push","DEFAULT_TACTICS_DECK","BattleLine","name","setup","troop_deck","slice","tactics_deck","unseen_cards","board_cards","Array","fill","discards","flag_statuses","flag_tiebreakers","shuffle_array","player_hands","pop","seen_cards","tactics_played","leaders_played","scout_state","minPlayers","maxPlayers","moves","playCard","G","ctx","flag","displaced_card","card_str","currentPlayer","numMoves","INVALID_MOVE","isTroopCard","isTacticsCard","splice","events","endTurn","isMoraleTacticsCard","isDisplacementCard","required_cards","flagHasMud","countFormationCards","isLeaderTacticsCard","displaced_card_str","isFormationCard","isScoutCard","num_draw","Math","min","length","has_mud","formations","getFormations","getOpponentID","ind","indexOf","claimFlag","move","has_fog","flagHasFog","formation","formation_opp","tiebreaker","formation_strength","sum_value","sumValue","flush_value","flushValue","straight_value","straightValue","set_value","setValue","formationStrength","formation_strength_opp","pot","potentialStraightFlush","formation_new","unseen_cards_new","potentialSet","potentialFlush","potentialStraight","potentialSum","potentialFormationStrength","formation_strength1","formation_strength2","get","formationStrengthComparison","isStrongestFormation","noLimit","drawCard","deck","client","passTurn","canPassTurn","playerView","playerID","troop_deck_stripped","tactics_deck_stripped","player_hands_stripped","parseInt","opp_hand_stripped","stripSecrets","endIf","player_id","count","count_consecutive","IsVictory","winner","color","val","vals","str_orig","highest_value","highest","diff","abs","max_diff","straightValueAux","values","Set","setIntersection","size","next","value","set1","set2","filter","x","has","sum","arr","k","floor","random","temp","hand","have_troop_card","canPlayTroopCard","canDisplaceCard","flag_id","COLOR_MAP","TACTICS_FORMAT_MAP","Card","props","cardRefs","React","createRef","height","side","this","updateCanvas","current","getContext","clearRect","translate","selected","str","drawTroopCardFront","drawTacticsCardFront","drawCardOutline","fillStyle","fillRect","card_width","card_height","font","textAlign","fillText","drawTroopCardBack","drawTacticsCardBack","ref","width","Component","Formation","formationRefs","cards","highlights","show_flag","drawFlag","Flag","flagRefs","highlight","lineHeight","measureText","padding","width_1","width_0","reduce_spacing","lineWidth","beginPath","moveTo","lineTo","stroke","rotate","PI","format","text","font_size","drawIcon","toString","console","log","corner_radius","fill_color","strokeStyle","arcTo","closePath","y_offset","img","document","getElementById","drawImage","y","b1","b2","p1","p2","p3","v1","v2","drawLeaderIcon","offset","drawCompanionCavalryIcon","drawShieldBearersIcon","p4","p5","p6","p7","drawTraitorIcon","drawDeserterIcon","drawRedeployIcon","pow","r","sqrt","alpha","atan","arc","drawScoutIcon","drawMudIcon","drawFogIcon","BattleLineBoard","selected_card","card_id","forceUpdate","event","rect","target","getBoundingClientRect","bottom","clientY","top","n_cards","boundary_y","new_displaced_card","arraysEqual","deck_name","tbody","cells","text_display","undefined","gameover","key","style","onClick","onClickCard","rowSpan","id","margin","onClickSlot","onClickDeck","pass_display","type","display","onClickPass","onClickFlag","arr1","arr2","BattleLineLobby","setState","playerName","_createMatch","_updateConnection","gameID","_joinMatch","_leaveMatch","_enterLobby","state","_exitLobby","_startGame","numPlayers","_exitMatch","matches_thead","matches_th","match_id_col_style","player_name_col_style","vs_col_style","button_col_style","handleNewMatch","handleRefreshMatches","matches_tbody","matches_row","match","connection","matches","player1_name","players","player2_name","handleJoinMatch","handleLeaveMatch","handleStartGame","phase","onChange","handleChangeName","handleEnterLobby","handleExitLobby","board_element","createElement","runningGame","app","credentials","Lobby","Header","bgcolor","fontFamily","fontSize","href","textDecoration","src","alt","App","Client","game","board","multiplayer","SocketIO","server","gameServer","lobbyServer","gameComponents","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb0b1070.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core';\n\nvar DEFAULT_TROOP_DECK = [];\nvar TROOP_DECK_COLORS = [\"r\",\"o\",\"y\",\"g\",\"b\",\"p\"];\nvar TROOP_DECK_VALUES = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"T\"];\nvar VALUE_MAP = new Map([[\"1\",1],[\"2\",2],[\"3\",3],[\"4\",4],[\"5\",5],[\"6\",6],[\"7\",7],[\"8\",8],[\"9\",9],[\"T\",10]]);\nvar VALUE_MAP_REVERSE = new Map([[1,\"1\"],[2,\"2\"],[3,\"3\"],[4,\"4\"],[5,\"5\"],[6,\"6\"],[7,\"7\"],[8,\"8\"],[9,\"9\"],[10,\"T\"]]);\nvar TACTICS_VALUE_MAP = new Map([[\"ALX\", [10,9,8,7,6,5,4,3,2,1]],[\"DAR\", [10,9,8,7,6,5,4,3,2,1]],[\"CAV\", [8]], [\"321\", [3,2,1]]])\nvar FORMATION_STRENGTH_MAP = new Map([[\"straightflush\",5],[\"set\",4],[\"flush\",3],[\"straight\",2],[\"sum\",1],[\"incomplete\",0]]);\n\nfor(let i = 0; i !== 10; i++){\n  for(let j = 0; j !== 6; j++){\n    let card = TROOP_DECK_VALUES[i]+TROOP_DECK_COLORS[j];\n    DEFAULT_TROOP_DECK.push(card);\n  }\n}\nvar DEFAULT_TACTICS_DECK = [\"ALX\",\"DAR\",\"CAV\",\"321\",\"TRA\",\"DES\",\"RDP\",\"SCT\",\"FOG\",\"MUD\"];\n\nexport const BattleLine = {\n  name: \"battle-line\",\n  setup: () => {\n                let troop_deck = DEFAULT_TROOP_DECK.slice();\n                let tactics_deck = DEFAULT_TACTICS_DECK.slice();\n                let unseen_cards = DEFAULT_TROOP_DECK.slice();\n                let board_cards = new Array(9).fill(new Array(2).fill([]))\n                let discards = new Array(2).fill([])\n                let seen_cards = [];\n\n                let flag_statuses = new Array(9).fill(null);\n                let flag_tiebreakers = new Array(9).fill(null);\n                shuffle_array(troop_deck);\n                shuffle_array(tactics_deck);\n                let player_hands = [];\n                player_hands.push([]);\n                player_hands.push([]);\n                for(let i = 0; i !== 7; i++){\n                  for(let j = 0; j !== 2; j++){\n                    player_hands[j].push(troop_deck.pop()); \n                  }\n                }\n\n                return { troop_deck: troop_deck,\n                  tactics_deck: tactics_deck,\n                  player_hands: player_hands,\n                  board_cards: board_cards,\n                  discards: discards,\n                  unseen_cards: unseen_cards,\n                  seen_cards: seen_cards,\n                  flag_statuses: flag_statuses,\n                  flag_tiebreakers: flag_tiebreakers,\n                  tactics_played: [0,0],\n                  leaders_played: [0,0],\n                  scout_state: [0, 0] // to_draw, drawn\n                }},\n  minPlayers: 2,\n  maxPlayers: 2,\n  moves: {\n    playCard: (G, ctx, card, flag, displaced_card = null) => {\n      let card_str = G.player_hands[ctx.currentPlayer][card];\n      if (ctx.numMoves > 0 && G.scout_state[1] > 0){\n        if (flag !== -1){\n          return INVALID_MOVE;\n        }\n\n        if (isTroopCard(card_str)){\n          G.troop_deck.push(card_str);\n        }\n        else if (isTacticsCard(card_str)){\n          G.tactics_deck.push(card_str);\n        }\n        G.player_hands[ctx.currentPlayer].splice(card, 1);\n        G.scout_state[1] = G.scout_state[1] - 1;\n        if (G.scout_state[1] <= 1){\n          G.scout_state[0] = 0;\n          G.scout_state[1] = 0;\n          ctx.events.endTurn();\n        }\n        return;\n      }\n\n      if (ctx.numMoves > 0){\n        return INVALID_MOVE;\n      }\n      if (flag !== -1 && (isTroopCard(card_str) || isMoraleTacticsCard(card_str) || isDisplacementCard(card_str))){\n        let required_cards = flagHasMud(G.board_cards[flag]) ? 4:3;\n        if (countFormationCards(G.board_cards[flag][ctx.currentPlayer]) === required_cards){\n          return INVALID_MOVE;\n        }\n      }\n      if (flag !== -1 && G.flag_statuses[flag] !== null){\n        return INVALID_MOVE;\n      }\n      if (isTacticsCard(card_str)){\n        if (ctx.currentPlayer === '0' && G.tactics_played[0] > G.tactics_played[1]){\n          return INVALID_MOVE;\n        }\n        if (ctx.currentPlayer === '1' && G.tactics_played[1] > G.tactics_played[0]){\n          return INVALID_MOVE;\n        }\n      }\n      if (isLeaderTacticsCard(card_str) && G.leaders_played[ctx.currentPlayer] > 0){\n        return INVALID_MOVE;\n      }\n      if (isDisplacementCard(card_str)){\n        if (displaced_card === null){\n          return INVALID_MOVE;\n        }\n        if (G.flag_statuses[displaced_card[0]] !== null){\n          return INVALID_MOVE;\n        }\n        let displaced_card_str = G.board_cards[displaced_card[0]][displaced_card[1]][displaced_card[2]];\n        if (card_str === \"TRA\"){\n          if (displaced_card[1] === ctx.currentPlayer || isTacticsCard(displaced_card_str) || flag === -1){\n            return INVALID_MOVE;\n          }\n        }\n        else if (card_str === \"DES\"){\n          if (displaced_card[1] === ctx.currentPlayer || !isFormationCard(displaced_card_str) || flag !== -1){\n            return INVALID_MOVE;\n          }\n        }\n        else if(card_str === \"RDP\"){\n          if (displaced_card[1] !== ctx.currentPlayer || !isFormationCard(displaced_card_str) || flag === displaced_card[0]){\n            return INVALID_MOVE;\n          }\n        }\n      }\n      else if (isScoutCard(card_str)){\n        if (flag !== -1){\n          return INVALID_MOVE;\n        }\n        let num_draw = Math.min(3, G.troop_deck.length + G.tactics_deck.length);\n        G.scout_state = [num_draw, 0];\n      }\n      else if (flag === -1){\n        return INVALID_MOVE;\n      }\n\n      if (isDisplacementCard(card_str)){\n        let displaced_card_str = G.board_cards[displaced_card[0]][displaced_card[1]][displaced_card[2]];\n        G.board_cards[displaced_card[0]][displaced_card[1]].splice(displaced_card[2], 1);\n        if (flag !== -1){\n          G.board_cards[flag][ctx.currentPlayer].push(displaced_card_str);\n        }\n        else{\n          G.discards[displaced_card[1]].push(displaced_card_str);\n        }\n        G.discards[ctx.currentPlayer].push(card_str);\n        if (G.flag_tiebreakers[displaced_card[0]] === displaced_card[1]){\n          G.flag_tiebreakers[displaced_card[0]] = null;\n        }\n      }\n      else if (isScoutCard(card_str)){\n        G.discards[ctx.currentPlayer].push(card_str);\n      }\n      else{\n        G.board_cards[flag][ctx.currentPlayer].push(card_str);\n        if (card_str === \"MUD\"){\n          G.flag_tiebreakers[flag] = null;\n        }\n      }\n\n      if (flag !== -1){\n        let has_mud = flagHasMud(G.board_cards[flag]);\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        let required_cards = has_mud ? 4:3;\n        if (formations[0].length === required_cards && G.flag_tiebreakers[flag] === null){\n          G.flag_tiebreakers[flag] = ctx.currentPlayer;\n        }\n      }\n      if (displaced_card !== null){\n        let has_mud = flagHasMud(G.board_cards[displaced_card[0]]);\n        var formations = getFormations(displaced_card[0], ctx.currentPlayer, G.board_cards);\n        let required_cards = has_mud ? 4:3;\n        if (formations[0].length === required_cards && G.flag_tiebreakers[displaced_card[0]] === null){\n          G.flag_tiebreakers[displaced_card[0]] = ctx.currentPlayer;\n        }\n        else if (formations[1].length === required_cards && G.flag_tiebreakers[displaced_card[0]] === null){\n          G.flag_tiebreakers[displaced_card[0]] = getOpponentID(ctx.currentPlayer);\n        }\n      }\n\n      G.seen_cards.push(card_str);\n      if (isTacticsCard(card_str)){\n        G.tactics_played[ctx.currentPlayer]++;\n      }\n      if (isLeaderTacticsCard(card_str)){\n        G.leaders_played[ctx.currentPlayer]++;\n      }\n      var ind = G.unseen_cards.indexOf(card_str);\n      if (ind !== -1){\n        G.unseen_cards.splice(ind,1);\n      }\n      G.player_hands[ctx.currentPlayer].splice(card, 1);\n    },\n    claimFlag: {\n      move: (G, ctx, flag) => {\n        if (G.flag_statuses[flag] !== null){\n          return INVALID_MOVE;\n        }\n        let has_fog = flagHasFog(G.board_cards[flag]);\n        let has_mud = flagHasMud(G.board_cards[flag]);\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        if (!isStrongestFormation(formations[0], formations[1], G.unseen_cards, has_fog, has_mud, G.flag_tiebreakers[flag] === ctx.currentPlayer)){\n          return INVALID_MOVE;\n        }\n        G.flag_statuses[flag] = ctx.currentPlayer;\n      },\n      noLimit: true\n    },\n    drawCard: {\n      move: (G, ctx, deck) => {\n        if (ctx.numMoves === 0){\n          return INVALID_MOVE;\n        }\n        if ((G.scout_state[0] != 0 || G.scout_state[1] != 0) && G.scout_state[0] <= G.scout_state[1]){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop' && G.troop_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'tactics' && G.tactics_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop'){\n          G.player_hands[ctx.currentPlayer].push(G.troop_deck.pop());\n        }\n        else if (deck === 'tactics'){\n          G.player_hands[ctx.currentPlayer].push(G.tactics_deck.pop());\n        }\n        else{\n          return INVALID_MOVE;\n        }\n        if (G.scout_state[0] != 0 || G.scout_state[1] != 0){\n          G.scout_state[1] = G.scout_state[1] + 1;\n          if (G.scout_state[0] === G.scout_state[1]){\n            G.scout_state[0] = 0;\n          }\n          return; // Don't end turn\n        }\n        ctx.events.endTurn();\n      },\n      client: false\n    },\n    passTurn: (G, ctx) => {\n      if (!canPassTurn(G, ctx)){\n        return INVALID_MOVE\n      }\n      ctx.events.endTurn();\n    }\n  },\n  playerView: (G, ctx, playerID) => {return stripSecrets(G, playerID)},\n\n  // },\n  endIf: (G, ctx) => {\n    if (IsVictory(G.flag_statuses, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer};\n    }\n  },\n};\n\n// Return true if `cells` is in a winning configuration.\nfunction IsVictory(flag_statuses, player_id) {\n  var count = 0;\n  var count_consecutive = 0;\n  for (let i = 0; i !== 9; i++){\n    if (flag_statuses[i] === player_id){\n      count++;\n      count_consecutive++;\n    }\n    else{\n      count_consecutive = 0;\n    }\n    if (count >= 5 || count_consecutive >= 3){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getFormations(flag, player_id, board_cards){\n  var formation = [];\n  var formation_opp = [];\n  for(let i = 0; i !== 2; i++){\n    for(let j = 0; j !== board_cards[flag][i].length; j++){\n      if(i === parseInt(player_id)){\n        if (isFormationCard(board_cards[flag][i][j])){\n          formation.push(board_cards[flag][i][j]);\n        }\n      }\n      else {\n        if (isFormationCard(board_cards[flag][i][j])){\n          formation_opp.push(board_cards[flag][i][j]);\n        }\n      }\n    }\n  }\n  return [formation, formation_opp];\n}\n\nfunction isStrongestFormation(formation, formation_opp, unseen_cards, has_fog, has_mud, tiebreaker){\n  var formation_strength = formationStrength(formation, has_fog, has_mud);\n  var formation_strength_opp = potentialFormationStrength(formation_opp, unseen_cards, has_fog, has_mud);\n  return formationStrengthComparison(formation_strength, formation_strength_opp, tiebreaker);\n}\n\nfunction formationStrengthComparison(formation_strength1, formation_strength2, tiebreaker){\n  if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) > FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return true;\n  }\n  else if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) < FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return false;\n  }\n  else if (formation_strength1[1] > formation_strength2[1]){\n    return true;\n  }\n  else if (formation_strength1[1] < formation_strength2[1]){\n    return false;\n  }\n  else{\n    return tiebreaker;\n  }\n}\n\nfunction formationStrength(formation, has_fog, has_mud){\n  let required_cards = has_mud ? 4:3;\n  if (formation.length !== required_cards){\n    return ['incomplete', 0];\n  }\n  var sum_value = sumValue(formation);\n  if (has_fog){\n    return ['sum', sum_value];\n  }\n\n  var flush_value = flushValue(formation);\n  var straight_value = straightValue(formation, has_mud);\n  var set_value = setValue(formation);\n\n  if (flush_value !== -1 && straight_value !== -1){\n    return ['straightflush', straight_value];\n  }\n  else if (set_value !== -1){\n    return ['set', set_value];\n  }\n  else if (flush_value !== -1){\n    return ['flush', flush_value];\n  }\n  else if (straight_value !== -1){\n    return ['straight', straight_value];\n  }\n  else{\n    return ['sum', sum_value];\n  }\n}\n\nfunction flushValue(formation){\n  let color = null;\n  let val = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      val += VALUE_MAP.get(formation[i][0]);\n      if (color === null){\n        color = formation[i][1];\n      }\n      else if(color !== formation[i][1]){\n        return -1;\n      }\n    }\n    else{\n      val += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return val;\n}\nfunction straightValue(formation, has_mud){\n  for (let i = 0; i !== formation.length; i++){\n    if (!isTroopCard(formation[i])){\n      let vals = TACTICS_VALUE_MAP.get(formation[i]);\n      let str_orig = formation[i];\n      let highest_value = -1;\n      for (let j = 0; j !== vals.length; j++){\n        formation[i] = VALUE_MAP_REVERSE.get(vals[j]) + 'x';\n        let val = straightValue(formation, has_mud);\n        if (val > highest_value){\n          highest_value = val;\n        }\n      }\n      formation[i] = str_orig;\n      return highest_value;\n    }\n  }\n  return straightValueAux(formation, has_mud);\n}\n\nfunction straightValueAux(formation, has_mud){\n  let highest = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (VALUE_MAP.get(formation[i][0]) > highest){\n      highest = VALUE_MAP.get(formation[i][0]);\n    }\n    for (let j = i+1; j !== formation.length; j++){\n      var diff = Math.abs(VALUE_MAP.get(formation[i][0]) - VALUE_MAP.get(formation[j][0]));\n      let max_diff = has_mud ? 3:2;\n      if (diff === 0 || diff > max_diff){\n        return -1;\n      }  \n    }\n  }\n  return formation.length*(2*highest - formation.length + 1)/2;\n}\n\nfunction setValue(formation){\n  var values = new Set([1,2,3,4,5,6,7,8,9,10]);\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      values = setIntersection(values, new Set([VALUE_MAP.get(formation[i][0])]));\n    }\n    else{\n      values = setIntersection(values, new Set(TACTICS_VALUE_MAP.get(formation[i])));\n    }\n    if (values.size === 0){\n      return -1;\n    }\n  }\n  return values.values().next().value*formation.length;\n}\n\nfunction setIntersection(set1, set2){\n  return new Set([...set1].filter(x => set2.has(x)));\n}\n\nfunction sumValue(formation){\n  var sum = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (formation[i].length === 2){\n      sum += VALUE_MAP.get(formation[i][0]);\n    }\n    else{\n      sum += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return sum;\n}\n\nfunction potentialFormationStrength(formation, unseen_cards, has_fog, has_mud){\n  let pot = -1;\n  if (!has_fog){\n    pot = potentialStraightFlush(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['straightflush', pot];\n    }\n    pot = potentialSet(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['set', pot];\n    }\n    pot = potentialFlush(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['flush', pot];\n    }\n    pot = potentialStraight(formation, unseen_cards, has_mud);\n    if (pot !== -1){\n      return ['straight', pot];\n    }\n  }\n  pot = potentialSum(formation, unseen_cards, has_mud);\n  if (pot !== -1){\n    return ['sum', pot];\n  }\n  return ['incomplete', pot];\n}\n\nfunction potentialStraightFlush(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  let straight_value = straightValue(formation, has_mud);\n\n  if (flush_value === -1 || straight_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n    return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraightFlush(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSet(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let set_value = setValue(formation);\n\n  if (set_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return set_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSet(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialFlush(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  if (flush_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return flush_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialFlush(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialStraight(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let straight_value = straightValue(formation, has_mud);\n  if (straight_value === -1){\n    return -1;\n  }\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraight(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSum(formation, unseen_cards, has_mud, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let sum_value = sumValue(formation);\n  let required_cards = has_mud ? 4:3;\n  if (formation.length === required_cards){\n      return sum_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSum(formation_new, unseen_cards_new, has_mud, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\n\nfunction shuffle_array(arr){\n  for(let i = arr.length-1; i >= 0; i--){\n    var k = Math.floor(Math.random()*(i+1));\n    var temp = arr[k];\n    arr[k] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n}\n\nfunction stripSecrets(G, playerID){\n  var troop_deck_stripped = new Array(G.troop_deck.length).fill(\"troop\");\n  var tactics_deck_stripped = new Array(G.tactics_deck.length).fill(\"tactics\");\n  var player_hands_stripped = [];\n  for (let i = 0; i !== 2; i++){\n    if(parseInt(playerID) === i){\n      player_hands_stripped.push(G.player_hands[i]);\n    }\n    else{\n      var opp_hand_stripped = [];\n      for (let j = 0; j !== G.player_hands[i].length; j++){\n        if (isTroopCard(G.player_hands[i][j]) || G.player_hands[i][j] === 'troop'){\n          opp_hand_stripped.push('troop');\n        }\n        else{\n          opp_hand_stripped.push('tactics');\n        }\n      }\n      player_hands_stripped.push(opp_hand_stripped);\n    }\n  }\n\n  var G_stripped = {troop_deck: troop_deck_stripped,\n                    tactics_deck: tactics_deck_stripped,\n                    player_hands: player_hands_stripped,\n                    board_cards: G.board_cards,\n                    discards: G.discards,\n                    unseen_cards: G.unseen_cards,\n                    seen_cards: G.seen_cards,\n                    flag_statuses: G.flag_statuses,\n                    flag_tiebreakers: G.flag_tiebreakers,\n                    tactics_played: G.tactics_played,\n                    leaders_played: G.leaders_played,\n                    scout_state: G.scout_state};\n  return G_stripped;\n}\n\nfunction canPlayTroopCard(board_cards, player_id, flag_statuses, hand){\n  let have_troop_card = false;\n  for (let i = 0; i !== hand.length && !have_troop_card; i++){\n    if (isTroopCard(hand[i])){\n      have_troop_card = true;\n    }\n  }\n  if (!have_troop_card){\n    return false;\n  }\n  for (let i = 0; i !== 9; i++){\n    let required_cards = flagHasMud(board_cards[i]) ? 4:3;\n    if (countFormationCards(board_cards[i][player_id]) !== required_cards && flag_statuses[i] === null){\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function canPassTurn(G, ctx){\n  if (ctx.numMoves === 0){\n    return !canPlayTroopCard(G.board_cards, ctx.currentPlayer, G.flag_statuses, G.player_hands[ctx.currentPlayer]); \n  }\n  else{\n    return G.troop_deck.length === 0 && G.tactics_deck.length === 0;\n  }\n}\n\nexport function canDisplaceCard(G, ctx, card_str, displaced_card_str, player_id, flag_id){\n  if (!isFormationCard(displaced_card_str)){\n    return false;\n  }\n  if (G.flag_statuses[flag_id] !== null){\n    return false;\n  }\n  if (card_str === \"TRA\" && (player_id === ctx.currentPlayer || isTacticsCard(displaced_card_str))){\n    return false;\n  }\n  if (card_str === \"DES\" && player_id === ctx.currentPlayer){\n    return false;\n  }\n  if (card_str === \"RDP\" && player_id !== ctx.currentPlayer){\n    return false;\n  }\n  return true;\n} \n\nexport function isTroopCard(card){\n  return card.length === 2;\n}\nexport function isTacticsCard(card){\n  return card.length === 3;\n}\n\nfunction isMoraleTacticsCard(card){\n  return [\"ALX\",\"DAR\",\"CAV\",\"321\"].indexOf(card) >= 0;\n}\n\nfunction isLeaderTacticsCard(card){\n  return [\"ALX\",\"DAR\"].indexOf(card) >= 0;\n}\n\nexport function isDisplacementCard(card){\n  return [\"TRA\",\"DES\",\"RDP\"].indexOf(card) >= 0;\n}\n\nexport function isScoutCard(card){\n  return [\"SCT\"].indexOf(card) >= 0;\n}\n\nfunction isFormationCard(card){\n  return isTroopCard(card) || isMoraleTacticsCard(card);\n}\n\nfunction countFormationCards(formation){\n  let count = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isFormationCard(formation[i])){\n      count++;\n    }\n  }\n  return count;\n}\n\nfunction flagHasFog(formations){\n  for (let i = 0; i !== 2; i++){\n    for (let j = 0; j !== formations[i].length; j++){\n      if (formations[i][j] === \"FOG\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction flagHasMud(formations){\n  for (let i = 0; i !== 2; i++){\n    for (let j = 0; j !== formations[i].length; j++){\n      if (formations[i][j] === \"MUD\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction getOpponentID(player_id){\n  if (player_id === \"0\")\n    return \"1\";\n  return \"0\";\n}","import React from 'react';\n\nvar COLOR_MAP = new Map([[\"r\",\"#FF0000\"],[\"o\",\"#FFA500\"],[\"y\",\"#FFFF00\"],[\"g\",\"#008000\"],[\"b\",\"#0000FF\"],[\"p\",\"#800080\"]]);\nvar TACTICS_FORMAT_MAP = new Map([[\"ALX\",[[\"ALEXANDER\"],6]],[\"DAR\",[[\"DARIUS\"],9]],[\"CAV\",[[\"COMPANION\",\"CAVALRY\"],6]],[\"321\",[[\"SHIELD\",\"BEARERS\"],8]],[\"TRA\",[[\"TRAITOR\"],9]],[\"DES\",[[\"DESERTER\"],7]],[\"RDP\",[[\"REDEPLOY\"],7]],[\"SCT\",[[\"SCOUT\"],9]],[\"FOG\",[[\"FOG\"],9]],[\"MUD\",[[\"MUD\"],9]]]);\n\n\nexport class Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cardRefs = React.createRef();\n        this.height = this.props.side === 'deck' ? 120:150;\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.cardRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, this.height);\n        let translate = (this.props.side === 'top' && this.props.selected) ||  (this.props.side === 'bottom' && !this.props.selected) || this.props.side === 'deck' ? 0:30;\n        ctx.translate(0,translate);\n        if (this.props.str.length === 2){\n            drawTroopCardFront(ctx, this.props.str, null);\n        }\n        else if (this.props.str.length === 3){\n            drawTacticsCardFront(ctx, this.props.str, null);\n        }\n        else if (this.props.str === 'troop'){\n            drawTroopCardBack(ctx);\n        }\n        else if (this.props.str === 'tactics'){\n            drawTacticsCardBack(ctx);\n        }\n        ctx.translate(0,-translate);\n    }\n\n    render() {\n         return (\n             <canvas ref={this.cardRefs} width={80} height={this.height}/>\n         );\n    }\n}\n\nexport class Formation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formationRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.formationRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 295);\n        if (this.props.side === 'top'){\n            ctx.translate(0,175);\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                ctx.translate(0,-35);\n            }\n            ctx.translate(0,-35*(5-this.props.cards.length))\n        }\n        else{\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlights[i]);\n                }\n                ctx.translate(0,35);\n            }\n            ctx.translate(0,-35*this.props.cards.length)\n        }\n        if (this.props.show_flag){\n            let y_offset = this.props.side === 'top' ? 35*(7-this.props.cards.length):35*this.props.cards.length;\n            drawFlag(ctx, y_offset);\n        }\n        \n    }\n\n    render() {\n         return (\n             <canvas ref={this.formationRefs} width={80} height={295}/>\n         );\n    }   \n}\n\nexport class Flag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.flagRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.flagRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 50);\n        if (this.props.show_flag){\n            drawFlag(ctx, 0);\n        }\n    }\n    render() {\n         return (\n             <canvas ref={this.flagRefs} width={80} height={50}/>\n         );\n    }   \n}\n\nfunction drawTroopCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n    let val = card_str[0];\n    let color = card_str[1];\n\n    if (highlight === null){\n        highlight = \"#FFFFFF\";\n    }\n    drawCardOutline(ctx, card_width, card_height, 7, highlight);\n    ctx.fillStyle = COLOR_MAP.get(color);\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    ctx.font = \"18px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    for (let i = 0; i !== 2; i++){\n        if (val !== 'T'){\n            ctx.fillText(val, padding + inset_width/2, padding + inset_height/2 + lineHeight/2 - 2); \n        }\n        else{\n            let reduce_spacing = 4;\n            let width_1 = ctx.measureText('1').width;\n            let width_0 = ctx.measureText('0').width;\n\n            ctx.fillText('1', padding + inset_width/2 - width_1/2 + reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2); \n            ctx.fillText('0', padding + inset_width/2 + width_0/2 - reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2);\n        }\n        if (val === '6' || val === '9'){\n            let width = ctx.measureText(val).width;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(padding + inset_width/2 - width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.lineTo(padding + inset_width/2 + width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.stroke();\n        }\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n}\n\nfunction drawTroopCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#000000\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TROOP', card_width/2, card_height/2)\n}\n\nfunction drawTacticsCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n\n    if (highlight === null){\n        highlight = \"#FFFFFF\";\n    }\n    drawCardOutline(ctx, card_width, card_height, 7, highlight);\n    ctx.fillStyle = \"#E4DB86\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    let format = TACTICS_FORMAT_MAP.get(card_str);\n    let text = format[0];\n    let font_size = format[1];\n    drawIcon(card_str, ctx, card_width/2, card_height/2, 40, 40);\n\n    for (let i = 0; i !== 2; i++){\n        ctx.font = font_size.toString() + \"px Verdana\";\n        ctx.fillStyle = \"#000000\";\n        ctx.textAlign = \"center\";\n        let lineHeight = ctx.measureText('M').width;\n        for (let j = 0; j !== text.length; j++){\n            ctx.fillText(text[j], (card_width + inset_width)/2, (35+padding+lineHeight*text.length)/2 - lineHeight*(text.length - 1 - j));\n        }\n        drawIcon(card_str, ctx, padding + inset_width/2, padding + inset_height/2 - 2, 18, 18);\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n    if (format.length === 3){\n        console.log(format[2]);\n        format[2]();\n    }\n}\n\nfunction drawTacticsCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#855040\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TACTICS', card_width/2, card_height/2);\n}\n\nfunction drawCardOutline(ctx, width, height, corner_radius, fill_color){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = fill_color;\n    let lineWidth = 2;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(corner_radius+lineWidth/2, lineWidth/2);\n    ctx.lineTo(width-corner_radius-lineWidth/2, lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, lineWidth/2, width-lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(width-lineWidth/2, height-corner_radius-lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, height-lineWidth/2, width-corner_radius-lineWidth/2, height-lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(corner_radius+lineWidth/2, height-lineWidth/2);\n    ctx.arcTo(lineWidth/2, height-lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(lineWidth/2, corner_radius+lineWidth/2);\n    ctx.arcTo(lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, lineWidth/2, corner_radius+lineWidth/2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawFlag(ctx, y_offset){\n    var img = document.getElementById(\"flag\");\n    ctx.drawImage(img, 15, y_offset, 50, 50);\n}\n\nfunction drawIcon(card_str, ctx, x, y, width, height) {\n    if (card_str === \"ALX\" || card_str === \"DAR\"){\n        drawLeaderIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"CAV\"){\n        drawCompanionCavalryIcon(ctx, x, y, height);\n    }\n    else if (card_str === \"321\"){\n        drawShieldBearersIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"TRA\"){\n        drawTraitorIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"DES\"){\n        drawDeserterIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"RDP\"){\n        drawRedeployIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"SCT\"){\n        drawScoutIcon(ctx, x, y, width, height);\n    }\n    else if (card_str === \"MUD\"){\n        drawMudIcon(ctx, x, y, height);\n    }\n    else if (card_str === \"FOG\"){\n        drawFogIcon(ctx, x, y, height);\n    }\n}\n\nfunction drawLeaderIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    width = 0.9*width-4;\n    height = 0.9*height;\n    let b1 = [x-width/3,y+height/2];\n    let b2 = [x+width/3,y+height/2];\n    let p1 = [x-width/2,y-height/2+2];\n    let p2 = [x,y-height/2+2];\n    let p3 = [x+width/2,y-height/2+2];\n    let v1 = [x-width/6,y];\n    let v2 = [x+width/6,y];\n    ctx.beginPath();\n    ctx.moveTo(b1[0], b1[1]);\n    ctx.lineTo(p1[0], p1[1]);\n    ctx.lineTo(v1[0], v1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(v2[0], v2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(b2[0], b2[1]);\n    ctx.lineTo(b1[0], b1[1]);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawCompanionCavalryIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"8\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawShieldBearersIcon(ctx, x, y, width, height){\n    ctx.font = (height/2).toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"321\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawTraitorIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    width = 0.4*width-4;\n    height = 0.9*height;\n    let p1 = [x-0.2*width,y-height/2+2];\n    let p2 = [x+0.2*width,y-height/2+2];\n    let p3 = [x+0.2*width,y+height/2-width];\n    let p4 = [x+width,y+height/2-width];\n    let p5 = [x,y+height/2];\n    let p6 = [x-width,y+height/2-width];\n    let p7 = [x-0.2*width,y+height/2-width];\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.lineTo(p5[0], p5[1]);\n    ctx.lineTo(p6[0], p6[1]);\n    ctx.lineTo(p7[0], p7[1]);\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawDeserterIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n\n    width = 0.7*width-4;\n    height = 0.9*height;\n    let lineWidth = height/5;\n    ctx.lineWidth = lineWidth;\n    let p1 = [x-width/2,y-height/2+2];\n    let p2 = [x+width/2,y-height/2+2];\n    let p3 = [x-width/2,y+height/2];\n    let p4 = [x+width/2,y+height/2];\n\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.moveTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.stroke();\n}\n\nfunction drawRedeployIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n    height = 0.4*height-4;\n    width = 0.9*width-4;\n    let p1 = [x-width/2,y-0.2*height];\n    let p2 = [x-width/2,y+0.2*height];\n    let p3 = [x+width/2-height,y+0.2*height];\n    let p4 = [x+width/2-height,y+height];\n    let p5 = [x+width/2,y];\n    let p6 = [x+width/2-height,y-height];\n    let p7 = [x+width/2-height,y-0.2*height];\n    ctx.beginPath();\n    ctx.moveTo(p1[0], p1[1]);\n    ctx.lineTo(p2[0], p2[1]);\n    ctx.lineTo(p3[0], p3[1]);\n    ctx.lineTo(p4[0], p4[1]);\n    ctx.lineTo(p5[0], p5[1]);\n    ctx.lineTo(p6[0], p6[1]);\n    ctx.lineTo(p7[0], p7[1]);\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawScoutIcon(ctx, x, y, width, height){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n\n    width = 0.9*width-4;\n    height = width*0.5;\n    let lineWidth = 1;\n    ctx.lineWidth = lineWidth;\n\n    let k = (Math.pow(height/2,2)-Math.pow(width/2,2))/height;\n    let r = Math.sqrt(Math.pow(width/2,2)+Math.pow(k,2));\n    let alpha = Math.atan(k*2/width);\n\n    ctx.beginPath();\n    ctx.moveTo(x+width/2,y);\n    ctx.arc(x, y-k, r, alpha, Math.PI-alpha, true);\n    ctx.arc(x, y+k, r, Math.PI+alpha,-alpha, true);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(x+height*0.2, y);\n    ctx.arc(x, y, height*0.2, 0, 2 * Math.PI, false);\n    ctx.stroke();\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(x+height*0.5,y);\n    ctx.arc(x, y, height*0.5, 0, 2 * Math.PI, false);\n    ctx.stroke();\n}\n\nfunction drawFogIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"#\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}\n\nfunction drawMudIcon(ctx, x, y, height){\n    ctx.font = height.toString()+\"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    let text = \"+\";\n    let offset = height < 30 ? 0:7;\n    ctx.fillText(text, x, y + lineHeight/2 - offset);\n}","import React from 'react';\nimport {Card, Formation, Flag} from './BoardComponents'\nimport {canPassTurn, isDisplacementCard, isScoutCard, canDisplaceCard, isTroopCard, isTacticsCard} from './Game'\n\nexport class BattleLineBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selected_card = null;\n    this.displaced_card = null;\n  }\n  onClickCard(player_id, card_id) {\n    if (this.props.ctx.currentPlayer !== player_id || this.props.ctx.currentPlayer !== this.props.playerID){\n      return;\n    }\n    if (this.selected_card !== card_id){\n      this.selected_card = card_id;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n    else{\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n  }\n  onClickSlot(player_id, flag_id, event) {\n    if (this.selected_card === null){\n      return;\n    }\n    let card_str = this.props.G.player_hands[this.props.ctx.currentPlayer][this.selected_card];\n    if (isDisplacementCard(card_str) && flag_id !== -1){\n      let rect = event.target.getBoundingClientRect();\n      let y_offset = player_id === '0' ? rect.bottom - event.clientY : event.clientY - rect.top;\n      let n_cards = this.props.G.board_cards[flag_id][player_id].length;\n\n      let boundary_y = 0;\n      for (let i = 0; i !== n_cards; i++){\n        let incr_y = (i !== n_cards - 1) ? 35:120;\n        boundary_y += incr_y;\n        if (y_offset < boundary_y){\n          let displaced_card_str = this.props.G.board_cards[flag_id][player_id][i];\n          if(canDisplaceCard(this.props.G, this.props.ctx, card_str, displaced_card_str, player_id, flag_id)){\n            let new_displaced_card = [flag_id, player_id, i];\n            if (this.displaced_card === null){\n              this.displaced_card = new_displaced_card;\n              this.forceUpdate();\n              return;\n            }\n            else if (arraysEqual(this.displaced_card, new_displaced_card)){\n              this.displaced_card = null;\n              this.forceUpdate();\n              return;\n            }\n            else{\n              break;\n            }\n          }\n          break;\n        }\n      }\n    }\n    if (isDisplacementCard(card_str)){\n      if (this.props.ctx.currentPlayer !== player_id && card_str !== \"DES\"){\n        return;\n      }\n      if (this.displaced_card === null){\n        return;\n      }\n      this.props.moves.playCard(this.selected_card, flag_id, this.displaced_card);\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n    else if (isScoutCard(card_str)){\n      if (flag_id === -1){\n        this.props.moves.playCard(this.selected_card, flag_id);\n        this.selected_card = null;\n        this.displaced_card = null;\n        this.forceUpdate();\n      }\n      else{\n        return;\n      }\n    }\n    else{\n      if (this.props.ctx.currentPlayer !== player_id){\n        return;\n      }\n      if (flag_id === -1){\n        return;\n      }\n      this.props.moves.playCard(this.selected_card, flag_id);\n      this.selected_card = null;\n      this.displaced_card = null;\n      this.forceUpdate();\n    }\n  }\n  onClickFlag(flag_id){\n    this.props.moves.claimFlag(flag_id);\n  }\n  onClickDeck(deck_name){\n    if (this.selected_card !== null){\n      let card_str = this.props.G.player_hands[this.props.ctx.currentPlayer][this.selected_card];\n      if (isScoutCard(card_str)){\n        this.props.moves.playCard(this.selected_card, -1);\n        this.selected_card = null;\n        this.displaced_card = null;\n        this.forceUpdate();\n      }\n      else if ((isTroopCard(card_str) && deck_name == \"troop\") || (isTacticsCard(card_str) && deck_name == \"tactics\")){\n        this.props.moves.playCard(this.selected_card, -1);\n        this.selected_card = null;\n        this.displaced_card = null;\n        this.forceUpdate();\n      }\n    }\n    this.props.moves.drawCard(deck_name);\n  }\n  onClickPass(){\n    this.props.moves.passTurn();\n  }\n  render() {\n    let tbody = [];\n\n    let cells = [];\n    let text_display = '';\n\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '0'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '0'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key ={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[0].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('0', i)}>\n          <Card str={this.props.G.player_hands[0][i]} side={'top'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='0' && this.props.playerID==='0' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    for (let i = 0; i !== 9 - this.props.G.player_hands[0].length; i++){\n      cells.push(\n        <td key={cells.length}></td>\n      );\n    }\n    let highlights = [new Array(this.props.G.discards[0].length).fill(null), new Array(this.props.G.discards[1].length).fill(null)];\n    if (this.props.G.discards[0].length > 0 && this.props.G.discards[0].slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0'){\n      highlights[0][this.props.G.discards[0].length-1] = \"#000000\";\n    }\n    if (this.props.G.discards[1].length > 0 && this.props.G.discards[1].slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1'){\n      highlights[1][this.props.G.discards[1].length-1] = \"#000000\";\n    }\n    cells.push(\n      <td rowSpan=\"5\" key={cells.length}>\n        <table id=\"tactics_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td onClick={(event) => this.onClickSlot('0',-1,event)}>\n                <Formation cards={this.props.G.discards[0]} side={'top'} show_flag={false} highlights={highlights[0]}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={() => this.onClickDeck('tactics')}>\n                <Card str={this.props.G.tactics_deck.length>0 ? this.props.G.tactics_deck[0]:''} side={'deck'}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={(event) => this.onClickSlot('1',-1,event)}>\n                <Formation cards={this.props.G.discards[1]} side={'bottom'} show_flag={false} highlights={highlights[1]}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    let pass_display = new Array(2).fill('none');\n    for (let i = 0; i !== 2; i++){\n      if (this.props.ctx.currentPlayer === this.props.playerID && this.props.ctx.currentPlayer === i.toString() && canPassTurn(this.props.G, this.props.ctx)){\n        pass_display[i] = 'block';\n      }\n    }\n    cells.push(\n      <td rowSpan=\"3\" key={cells.length}>\n        <table id=\"troop_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[0]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'120px'}} onClick={() => this.onClickDeck('troop')}>\n                <Card str={this.props.G.troop_deck.length>0 ? this.props.G.troop_deck[0]:''} side={'deck'}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[1]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][0];\n      let show_flag = this.props.G.flag_statuses[i]==='0';\n      let highlights = new Array(cards.length).fill(null);\n      let last_played = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0';\n      if (last_played){\n        highlights[cards.length-1] = \"#000000\";\n      }\n      if (this.displaced_card !== null && this.displaced_card[0] === i && this.displaced_card[1] === '0'){\n        highlights[this.displaced_card[2]] = \"#AAAAAA\";\n      }\n      cells.push(\n        <td key={cells.length} onClick={(event) => this.onClickSlot('0', i, event)}>\n          <Formation cards={cards} side={'top'} show_flag={show_flag} highlights={highlights}/>\n        </td>\n      );\n    }\n\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickFlag(i)}>\n          <Flag show_flag={this.props.G.flag_statuses[i]===null}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][1];\n      let show_flag = this.props.G.flag_statuses[i]==='1';\n      let highlights = new Array(cards.length).fill(null);\n      let last_played = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1';\n      if (last_played){\n        highlights[cards.length-1] = \"#000000\";\n      } \n      if (this.displaced_card !== null && this.displaced_card[0] === i && this.displaced_card[1] === '1'){\n        highlights[this.displaced_card[2]] = \"#AAAAAA\";\n      }\n      cells.push(\n        <td key={cells.length} onClick={(event) => this.onClickSlot('1',i,event)}>\n          <Formation cards={cards} side={'bottom'} show_flag={show_flag} highlights={highlights}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    text_display = '';\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '1'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '1'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[1].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('1',i)}>\n          <Card str={this.props.G.player_hands[1][i]} side={'bottom'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='1' && this.props.playerID==='1' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    return (\n      <div>\n        <table id=\"board\" style={{margin:\"auto\"}}>\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction arraysEqual(arr1, arr2){\n  if (arr1 === null && arr2 === null){\n    return true;\n  }\n  if (arr1 === null || arr2 === null){\n    return false;\n  }\n  if (arr1.length !== arr2.length){\n    return false;\n  }\n  for (let i = 0; i !== arr1.length; i++){\n    if (arr1[i] !== arr2[i]){\n      return false;\n    }\n  }\n  return true;\n}","import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\n\nexport class BattleLineLobby extends Lobby{\n    handleChangeName(event){\n        this.setState({\n            playerName: event.target.value,\n        });\n    }\n    handleNewMatch(event){\n        console.log(\"New match\");\n        this._createMatch('battle-line', 2);\n    }\n    handleRefreshMatches(event){\n        console.log(\"Refresh matches\");\n        this._updateConnection();\n    }\n    handleJoinMatch(event, gameID, playerID){\n        console.log(\"Join match\");\n        console.log(gameID);\n        console.log(playerID);\n        this._joinMatch('battle-line', gameID, playerID);\n    }\n    handleLeaveMatch(event, gameID){\n        console.log(\"Leave match\");\n        this._leaveMatch('battle-line', gameID);\n    }\n    handleEnterLobby(event){\n        console.log(\"Enter lobby\");\n        this._enterLobby(this.state.playerName);\n    }\n    handleExitLobby(event){\n        console.log(\"Exit lobby\");\n        this._exitLobby();\n    }\n    handleStartGame(event, gameID, playerID){\n        console.log(\"Start game\");\n        this._startGame('battle-line', {numPlayers: 2, gameID: gameID, playerID: playerID});\n    }\n    handleExitMatch(event){\n        console.log(\"Exit match\")\n        this._exitMatch();\n    }\n    render(){\n        var matches_thead = [];\n        var matches_th = [];\n\n        const match_id_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const player_name_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const vs_col_style = {\n            width:\"30px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const button_col_style = {\n            width:\"100px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n\n        matches_th.push(<th style={match_id_col_style}>{'Match ID'}</th>);\n        matches_th.push(<th style={player_name_col_style}>{'Player 1'}</th>);\n        matches_th.push(<th style={vs_col_style}>{'vs.'}</th>);\n        matches_th.push(<th style={player_name_col_style}>{'Player 2'}</th>);\n        matches_th.push(<th style={button_col_style}><input type=\"button\" value=\"New Match\" onClick={(event) => this.handleNewMatch(event)}/></th>);\n        matches_th.push(<th style={button_col_style}><input type=\"button\" value=\"Refresh\" onClick={(event) => this.handleRefreshMatches(event)}/></th>);\n        matches_thead.push(<tr>{matches_th}</tr>);\n\n        var matches_tbody = [];\n        for (var i = 0; i !== this.connection.matches.length; i++){\n            var matches_row = [];\n            let match = this.connection.matches[i];\n            var player1_name = (match.players.length > 0) ? match.players[0].name:undefined;\n            var player2_name = (match.players.length > 1) ? match.players[1].name:undefined;\n\n            matches_row.push(<td style={match_id_col_style}>{match.gameID}</td>);\n            if (player1_name !== undefined){\n                matches_row.push(<td style={player_name_col_style}>{player1_name}</td>);\n            }\n            else{\n                matches_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinMatch(event, match.gameID, 0)}/></td>);\n            }\n            matches_row.push(<td style={vs_col_style}>{'vs.'}</td>);\n            if (player2_name !== undefined){\n                matches_row.push(<td style={player_name_col_style}>{player2_name}</td>);\n            }\n            else{\n                matches_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinMatch(event, match.gameID, 1)}/></td>);\n            }    \n\n            if (player1_name === this.state.playerName || player2_name === this.state.playerName){\n                matches_row.push(<td style={button_col_style}><input type=\"button\" value=\"Leave\" onClick={(event) => this.handleLeaveMatch(event, match.gameID)}/></td>);\n            }\n            else{\n                matches_row.push(<td style={button_col_style}></td>);\n            }\n            if((player1_name === this.state.playerName && player2_name !== undefined) || (player2_name === this.state.playerName && player1_name !== undefined)){\n                let playerID = this.state.playerName === player1_name ? '0':'1';\n                matches_row.push(<td style={button_col_style}><input type=\"button\" value=\"Play\" onClick={(event) => this.handleStartGame(event, match.gameID, playerID)}/></td>);\n            }\n            else{\n                matches_row.push(<td style={button_col_style}></td>);\n            }\n            matches_tbody.push(<tr>{matches_row}</tr>);\n        }\n\n        // var errMsg = this.state.errorMsg !== '' ? 'Error: ' + this.state.errorMsg:'';\n\n        if (this.state.phase === 'enter'){\n            return (\n                <div>\n                    {'Enter name: '}\n                    <input type=\"text\" value={this.state.playerName} onChange={(event) => this.handleChangeName(event)}/>\n                    <input type=\"button\" value=\"Enter Lobby\" onClick={(event) => this.handleEnterLobby(event)}/>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'list'){\n            return (\n                <div>\n                    <input type=\"button\" value=\"Exit Lobby\" onClick={(event) => this.handleExitLobby(event)}/>\n                    <br></br>\n                    <table id=\"matches\">\n                        <thead>\n                            {matches_thead}\n                        </thead>\n                        <tbody>\n                            {matches_tbody}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'play'){\n            var board_element = React.createElement(this.state.runningGame.app, {\n                gameID: this.state.runningGame.gameID,\n                playerID: this.state.runningGame.playerID,\n                credentials: this.state.runningGame.credentials\n            });\n            return (\n                <div>\n                    {board_element}\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\n\nexport class Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <table style={{width:\"100%\"}} bgcolor=\"#E4DB86\">\n                    <tbody>\n                        <tr>\n                            <td style={{fontFamily:\"Verdana\", fontSize:\"30px\",padding:\"10px\"}}>\n                                <a href=\"https://rsandzimier.github.io/battleline/\" style={{color:\"inherit\", textDecoration:\"none\"}}>\n                                    BATTLE LINE\n                                </a>\n                            </td>\n                            <td style={{textAlign:\"right\"}}>\n                                <a href=\"https://github.com/rsandzimier/battleline\">\n                                    <img id=\"github\" src=\"https://raw.githubusercontent.com/rsandzimier/battleline/master/github_logo.png\" style={{height:\"50px\"}} alt=\"Github logo\"/>\n                                </a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table><br></br>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { BattleLine } from './Game';\nimport { BattleLineBoard } from './Board';\nimport { BattleLineLobby } from './Lobby';\nimport { Header } from './Header';\n\nconst BattleLineClient = Client({\n  game: BattleLine,\n  board: BattleLineBoard,\n  // ONLINE:\n  multiplayer: SocketIO({ server: 'https://battleline-backend.herokuapp.com' }),\n  // LOCAL:\n  // multiplayer: SocketIO({ server: 'localhost:8000' }),\n  // END\n});\n\n// ONLINE:\nconst App = () => (\n  <div>\n    <Header/>\n    <BattleLineLobby\n    gameServer={'https://battleline-backend.herokuapp.com'}\n    lobbyServer={'https://battleline-backend.herokuapp.com'}\n    gameComponents={[{game: BattleLine, board: BattleLineBoard}]}\n    />\n  </div>\n)\n\n// LOCAL:\n// const App = () => (\n//   <div>\n//     <Header/>\n//     <BattleLineClient/>\n//   </div>\n// )\n// END\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}