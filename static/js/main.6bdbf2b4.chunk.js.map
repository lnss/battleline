{"version":3,"sources":["Game.js","BoardComponents.js","Board.js","Lobby.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["DEFAULT_TROOP_DECK","TROOP_DECK_COLORS","TROOP_DECK_VALUES","VALUE_MAP","Map","VALUE_MAP_REVERSE","TACTICS_VALUE_MAP","FORMATION_STRENGTH_MAP","i","j","card","push","troop_deck","slice","tactics_deck","board_cards","Array","fill","unseen_cards","seen_cards","flag_statuses","BattleLine","name","setup","shuffle_array","player_hands","pop","tactics_played","leaders_played","minPlayers","maxPlayers","moves","playCard","G","ctx","flag","console","log","numMoves","INVALID_MOVE","formations","length","flagHasMud","currentPlayer","isLeaderTacticsCard","indexOf","ind","splice","claimFlag","move","player_id","formation","formation_opp","parseInt","getFormations","formation_strength","flush_value","flushValue","straight_value","straightValue","set_value","setValue","sum_value","sumValue","formationStrength","formation_strength_opp","pot","potentialStraightFlush","formation_new","unseen_cards_new","potentialSet","potentialFlush","potentialStraight","potentialSum","potentialFormationStrength","formation_strength1","formation_strength2","get","isStrongestFormation","noLimit","drawCard","deck","events","endTurn","client","passTurn","canPassTurn","playerView","playerID","stripSecrets","endIf","count","count_consecutive","IsVictory","winner","color","val","isTroopCard","vals","str_orig","highest_value","highest","diff","Math","abs","straightValueAux","values","Set","setIntersection","size","next","value","set1","set2","filter","x","has","sum","arr","k","floor","random","temp","hand","have_troop_card","canPlayTroopCard","COLOR_MAP","TACTICS_FORMAT_MAP","Card","props","cardRefs","React","createRef","this","updateCanvas","current","getContext","clearRect","translate","side","selected","str","drawTroopCardFront","drawTacticsCardFront","drawCardOutline","fillStyle","fillRect","card_width","card_height","font","textAlign","fillText","drawTroopCardBack","drawTacticsCardBack","ref","width","height","Component","Formation","formationRefs","cards","highlight","show_flag","drawFlag","Flag","flagRefs","card_str","lineHeight","measureText","padding","width_1","width_0","reduce_spacing","lineWidth","beginPath","moveTo","lineTo","stroke","rotate","PI","format","text","font_size","toString","corner_radius","fill_color","strokeStyle","arcTo","closePath","y_offset","img","document","getElementById","drawImage","BattleLineBoard","selected_card","card_id","forceUpdate","flag_id","deck_name","tbody","cells","text_display","undefined","gameover","key","style","onClick","onClickCard","pass_display","rowSpan","id","margin","type","display","onClickPass","onClickDeck","onClickSlot","onClickFlag","BattleLineLobby","event","setState","playerName","target","_createRoom","_updateConnection","gameID","_joinRoom","_leaveRoom","_enterLobby","state","_exitLobby","_startGame","numPlayers","_exitRoom","rooms_thead","rooms_th","room_id_col_style","player_name_col_style","vs_col_style","button_col_style","handleNewRoom","handleRefreshRooms","rooms_tbody","rooms_row","room","connection","rooms","player1_name","players","player2_name","handleJoinRoom","handleLeaveRoom","handleStartGame","phase","onChange","handleChangeName","handleEnterLobby","handleExitLobby","board_element","createElement","runningGame","app","credentials","Lobby","Header","bgcolor","fontFamily","fontSize","href","textDecoration","src","alt","App","Client","game","board","multiplayer","SocketIO","server","gameServer","lobbyServer","gameComponents","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6bdbf2b4.chunk.js","sourcesContent":["import { INVALID_MOVE } from 'boardgame.io/core';\n\nvar DEFAULT_TROOP_DECK = [];\nvar TROOP_DECK_COLORS = [\"r\",\"o\",\"y\",\"g\",\"b\",\"p\"];\nvar TROOP_DECK_VALUES = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"T\"];\nvar VALUE_MAP = new Map([[\"1\",1],[\"2\",2],[\"3\",3],[\"4\",4],[\"5\",5],[\"6\",6],[\"7\",7],[\"8\",8],[\"9\",9],[\"T\",10]]);\nvar VALUE_MAP_REVERSE = new Map([[1,\"1\"],[2,\"2\"],[3,\"3\"],[4,\"4\"],[5,\"5\"],[6,\"6\"],[7,\"7\"],[8,\"8\"],[9,\"9\"],[10,\"T\"]]);\nvar TACTICS_VALUE_MAP = new Map([[\"ALX\", [10,9,8,7,6,5,4,3,2,1]],[\"DAR\", [10,9,8,7,6,5,4,3,2,1]],[\"CAV\", [8]], [\"321\", [3,2,1]]])\nvar FORMATION_STRENGTH_MAP = new Map([[\"straightflush\",5],[\"set\",4],[\"flush\",3],[\"straight\",2],[\"sum\",1],[\"incomplete\",0]]);\n\nfor(let i = 0; i !== 10; i++){\n  for(let j = 0; j !== 6; j++){\n    var card = TROOP_DECK_VALUES[i]+TROOP_DECK_COLORS[j];\n    DEFAULT_TROOP_DECK.push(card);\n  }\n}\n\nvar troop_deck = DEFAULT_TROOP_DECK.slice();\n\nvar DEFAULT_TACTICS_DECK = [\"ALX\",\"DAR\",\"CAV\",\"321\",\"TRA\",\"DES\",\"RDP\",\"SCT\"];//,\"FOG\",\"MUD\"];\nvar tactics_deck = DEFAULT_TACTICS_DECK.slice();\n\nvar board_cards = new Array(9).fill(new Array(2).fill([]))\nvar unseen_cards = DEFAULT_TROOP_DECK.slice();\nvar seen_cards = [];\n\nvar flag_statuses = new Array(9).fill(null);\n\nexport const BattleLine = {\n  name: \"battle-line\",\n  setup: () => {\n                shuffle_array(troop_deck);\n                shuffle_array(tactics_deck);\n                let player_hands = [];\n                player_hands.push([]);\n                player_hands.push([]);\n                for(let i = 0; i !== 7; i++){\n                  for(let j = 0; j !== 2; j++){\n                    player_hands[j].push(troop_deck.pop()); \n                  }\n                }\n\n                return { troop_deck: troop_deck,\n                  tactics_deck: tactics_deck,\n                  player_hands: player_hands,\n                  board_cards: board_cards,\n                  unseen_cards: unseen_cards,\n                  seen_cards: seen_cards,\n                  flag_statuses: flag_statuses,\n                  tactics_played: [0,0],\n                  leaders_played: [0,0]\n                }},\n  minPlayers: 2,\n  maxPlayers: 2,\n  moves: {\n    playCard: (G, ctx, card, flag) => {\n      console.log(G);\n      if (ctx.numMoves > 0){\n        return INVALID_MOVE;\n      }\n      if (flagHasMud(G.board_cards[flag])){\n        if (G.board_cards[flag][ctx.currentPlayer].length === 3){\n          return INVALID_MOVE;\n        }\n      } \n      else{\n        if (G.board_cards[flag][ctx.currentPlayer].length === 3){\n          return INVALID_MOVE;\n        }\n      }\n      if (G.flag_statuses[flag] !== null){\n        return INVALID_MOVE;\n      }\n      if (G.player_hands[ctx.currentPlayer][card].length === 3){\n        if (ctx.currentPlayer === '0' && G.tactics_played[0] > G.tactics_played[1]){\n          return INVALID_MOVE;\n        }\n        if (ctx.currentPlayer === '1' && G.tactics_played[1] > G.tactics_played[0]){\n          return INVALID_MOVE;\n        }\n      }\n      if (isLeaderTacticsCard(G.player_hands[ctx.currentPlayer][card]) && G.leaders_played[ctx.currentPlayer] > 0){\n        return INVALID_MOVE;\n      }\n      if ([\"TRA\",\"DES\",\"RDP\",\"SCT\",\"FOG\",\"MUD\"].indexOf(G.player_hands[ctx.currentPlayer][card]) >= 0){\n        return INVALID_MOVE;\n      }\n      G.board_cards[flag][ctx.currentPlayer].push(G.player_hands[ctx.currentPlayer][card]);\n      G.seen_cards.push(G.player_hands[ctx.currentPlayer][card]);\n      if (G.player_hands[ctx.currentPlayer][card].length === 3){\n        G.tactics_played[ctx.currentPlayer]++;\n      }\n      if (isLeaderTacticsCard(G.player_hands[ctx.currentPlayer][card])){\n        G.leaders_played[ctx.currentPlayer]++;\n      }\n      var ind = G.unseen_cards.indexOf(G.player_hands[ctx.currentPlayer][card]);\n      if (ind !== -1){\n        G.unseen_cards.splice(ind,1);\n      }\n      G.player_hands[ctx.currentPlayer].splice(card, 1);\n    },\n    claimFlag: {\n      move: (G, ctx, flag) => {\n        if (G.flag_statuses[flag] !== null){\n          return INVALID_MOVE;\n        }\n        var formations = getFormations(flag, ctx.currentPlayer, G.board_cards);\n        if (!isStrongestFormation(formations[0], formations[1], G.unseen_cards)){\n          return INVALID_MOVE;\n        }\n        G.flag_statuses[flag] = ctx.currentPlayer;\n      },\n      noLimit: true\n    },\n    drawCard: {\n      move: (G, ctx, deck) => {\n        if (ctx.numMoves === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop' && G.troop_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'tactics' && G.tactics_deck.length === 0){\n          return INVALID_MOVE;\n        }\n        if (deck === 'troop'){\n          G.player_hands[ctx.currentPlayer].push(G.troop_deck.pop());\n        }\n        else if (deck === 'tactics'){\n          G.player_hands[ctx.currentPlayer].push(G.tactics_deck.pop());\n        }\n        else{\n          return INVALID_MOVE;\n        }\n        ctx.events.endTurn();\n      },\n      client: false\n    },\n    passTurn: (G, ctx) => {\n      if (!canPassTurn(G, ctx)){\n        return INVALID_MOVE\n      }\n      ctx.events.endTurn();\n    }\n  },\n  playerView: (G, ctx, playerID) => {return stripSecrets(G, playerID)},\n\n  // },\n  endIf: (G, ctx) => {\n    if (IsVictory(G.flag_statuses, ctx.currentPlayer)) {\n      return { winner: ctx.currentPlayer};\n    }\n  },\n};\n\n// Return true if `cells` is in a winning configuration.\nfunction IsVictory(flag_statuses, player_id) {\n  var count = 0;\n  var count_consecutive = 0;\n  for (let i = 0; i !== 9; i++){\n    if (flag_statuses[i] === player_id){\n      count++;\n      count_consecutive++;\n    }\n    else{\n      count_consecutive = 0;\n    }\n    if (count >= 5 || count_consecutive >= 3){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getFormations(flag, player_id, board_cards){\n  var formation = [];\n  var formation_opp = [];\n  for(let i = 0; i !== 2; i++){\n    for(let j = 0; j !== board_cards[flag][i].length; j++){\n      if(i === parseInt(player_id)){\n        formation.push(board_cards[flag][i][j]);\n      }\n      else {\n        formation_opp.push(board_cards[flag][i][j]);\n      }\n    }\n  }\n  return [formation, formation_opp];\n}\n\nfunction isStrongestFormation(formation, formation_opp, unseen_cards){\n  var formation_strength = formationStrength(formation);\n  var formation_strength_opp = potentialFormationStrength(formation_opp, unseen_cards);\n\n  return formationStrengthComparison(formation_strength, formation_strength_opp);\n}\n\nfunction formationStrengthComparison(formation_strength1, formation_strength2){\n  if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) > FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return true;\n  }\n  else if (FORMATION_STRENGTH_MAP.get(formation_strength1[0]) < FORMATION_STRENGTH_MAP.get(formation_strength2[0])){\n    return false;\n  }\n  else if (formation_strength1[1] >= formation_strength2[1]){\n    return true;\n  }\n  else{\n    return false;\n  }\n}\n\nfunction formationStrength(formation){\n  if (formation.length !== 3){\n    return ['incomplete', 0];\n  }\n\n  var flush_value = flushValue(formation);\n  var straight_value = straightValue(formation);\n  var set_value = setValue(formation);\n  var sum_value = sumValue(formation);\n\n  if (flush_value !== -1 && straight_value !== -1){\n    return ['straightflush', straight_value];\n  }\n  else if (set_value !== -1){\n    return ['set', set_value];\n  }\n  else if (flush_value !== -1){\n    return ['flush', flush_value];\n  }\n  else if (straight_value !== -1){\n    return ['straight', straight_value];\n  }\n  else{\n    return ['sum', sum_value];\n  }\n}\n\nfunction flushValue(formation){\n  let color = null;\n  let val = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i])){\n      val += VALUE_MAP.get(formation[i][0]);\n      if (color === null){\n        color = formation[i][1];\n      }\n      else if(color !== formation[i][1]){\n        return -1;\n      }\n    }\n    else{\n      val += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return val;\n}\nfunction straightValue(formation){\n  for (let i = 0; i !== formation.length; i++){\n    if (formation[i].length !== 2){\n      let vals = TACTICS_VALUE_MAP.get(formation[i]);\n      let str_orig = formation[i];\n      let highest_value = -1;\n      for (let j = 0; j !== vals.length; j++){\n        formation[i] = VALUE_MAP_REVERSE.get(vals[j]) + 'x';\n        let val = straightValue(formation);\n        if (val > highest_value){\n          highest_value = val;\n        }\n      }\n      formation[i] = str_orig;\n      return highest_value;\n    }\n  }\n  return straightValueAux(formation);\n}\n\nfunction straightValueAux(formation){\n  let highest = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (VALUE_MAP.get(formation[i][0]) > highest){\n      highest = VALUE_MAP.get(formation[i][0]);\n    }\n    for (let j = i+1; j !== formation.length; j++){\n      var diff = Math.abs(VALUE_MAP.get(formation[i][0]) - VALUE_MAP.get(formation[j][0]));\n      if (diff === 0 || diff >= 3){\n        return -1;\n      }  \n    }\n  }\n  return formation.length*(2*highest - formation.length + 1)/2;\n}\n\nfunction setValue(formation){\n  var values = new Set([1,2,3,4,5,6,7,8,9,10]);\n  for (let i = 0; i !== formation.length; i++){\n    if (isTroopCard(formation[i].length)){\n      values = setIntersection(values, new Set([VALUE_MAP.get(formation[i][0])]));\n    }\n    else{\n      values = setIntersection(values, new Set(TACTICS_VALUE_MAP.get(formation[i])));\n    }\n    if (values.size === 0){\n      return -1;\n    }\n  }\n  return values.values().next().value*formation.length;\n}\n\nfunction setIntersection(set1, set2){\n  return new Set([...set1].filter(x => set2.has(x)));\n}\n\nfunction sumValue(formation){\n  var sum = 0;\n  for (let i = 0; i !== formation.length; i++){\n    if (formation[i].length == 2){\n      sum += VALUE_MAP.get(formation[i][0]);\n    }\n    else{\n      sum += TACTICS_VALUE_MAP.get(formation[i])[0];\n    }\n  }\n  return sum;\n}\n\nfunction potentialFormationStrength(formation, unseen_cards){\n  let pot = potentialStraightFlush(formation, unseen_cards);\n  if (pot !== -1){\n    return ['straightflush', pot];\n  }\n  pot = potentialSet(formation, unseen_cards);\n  if (pot !== -1){\n    return ['set', pot];\n  }\n  pot = potentialFlush(formation, unseen_cards);\n  if (pot !== -1){\n    return ['flush', pot];\n  }\n  pot = potentialStraight(formation, unseen_cards);\n  if (pot !== -1){\n    return ['straight', pot];\n  }\n  pot = potentialSum(formation, unseen_cards);\n  if (pot !== -1){\n    return ['sum', pot];\n  }\n  return ['incomplete', pot];\n}\n\nfunction potentialStraightFlush(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  let straight_value = straightValue(formation);\n\n  if (flush_value === -1 || straight_value === -1){\n    return -1;\n  }\n  if (formation.length === 3){\n    return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraightFlush(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSet(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let set_value = setValue(formation);\n  if (set_value === -1){\n    return -1;\n  }\n  if (formation.length === 3){\n    return set_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSet(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialFlush(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let flush_value = flushValue(formation);\n  if (flush_value === -1){\n    return -1;\n  }\n  if (formation.length === 3){\n    return flush_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialFlush(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialStraight(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let straight_value = straightValue(formation);\n  if (straight_value === -1){\n    return -1;\n  }\n  if (formation.length === 3){\n    return straight_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialStraight(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\nfunction potentialSum(formation, unseen_cards, ind = null){\n  if (ind === null){\n    ind = unseen_cards.length;\n  }\n  let sum_value = sumValue(formation);\n  if (formation.length === 3){\n    return sum_value;\n  }\n  for(let i = ind - 1; i >= 0; i--){\n    var formation_new = formation.slice();\n    var unseen_cards_new = unseen_cards.slice();\n    formation_new.push(unseen_cards[i]);\n    unseen_cards_new.splice(i, 1);\n    var pot = potentialSum(formation_new, unseen_cards_new, i);\n    if (pot !== -1){\n      return pot;\n    }\n  }\n  return -1;\n}\n\nfunction shuffle_array(arr){\n  for(let i = arr.length-1; i >= 0; i--){\n    var k = Math.floor(Math.random()*(i+1));\n    var temp = arr[k];\n    arr[k] = arr[i];\n    arr[i] = temp;\n  }\n  return arr;\n}\n\nfunction stripSecrets(G, playerID){\n  return G;\n  var troop_deck_stripped = new Array(G.troop_deck.length).fill(\"troop\");\n  var tactics_deck_stripped = new Array(G.tactics_deck.length).fill(\"tactics\");\n  var player_hands_stripped = [];\n  for (let i = 0; i !== 2; i++){\n    if(parseInt(playerID) === i){\n      player_hands_stripped.push(G.player_hands[i]);\n    }\n    else{\n      var opp_hand_stripped = [];\n      for (let j = 0; j !== G.player_hands[i].length; j++){\n        if (isTroopCard(G.player_hands[i][j]) || G.player_hands[i][j] === 'troop'){\n          opp_hand_stripped.push('troop');\n        }\n        else{\n          opp_hand_stripped.push('tactics');\n        }\n      }\n      player_hands_stripped.push(opp_hand_stripped);\n    }\n  }\n\n  var G_stripped = {troop_deck: troop_deck_stripped,\n                    tactics_deck: tactics_deck_stripped,\n                    player_hands: player_hands_stripped,\n                    board_cards: G.board_cards,\n                    unseen_cards: G.unseen_cards,\n                    seen_cards: G.seen_cards,\n                    flag_statuses: G.flag_statuses,\n                    tactics_played: G.tactics_played,\n                    leaders_played: G.leaders_played};\n  return G_stripped;\n}\n\nfunction canPlayTroopCard(board_cards, player_id, flag_statuses, hand){\n  let have_troop_card = false;\n  for (let i = 0; i !== hand.length && !have_troop_card; i++){\n    if (isTroopCard(hand[i])){\n      have_troop_card = true;\n    }\n  }\n  if (!have_troop_card){\n    return false;\n  }\n  for (let i = 0; i !== 9; i++){\n    if (board_cards[i][player_id].length !== 3 && flag_statuses[i] === null){\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction canPassTurn(G, ctx){\n  if (ctx.numMoves === 0){\n    return !canPlayTroopCard(G.board_cards, ctx.currentPlayer, G.flag_statuses, G.player_hands[ctx.currentPlayer]); \n  }\n  else{\n    return G.troop_deck.length === 0;\n  }\n}\n\nfunction isTroopCard(card){\n  return card.length === 2;\n}\n\nfunction isMoraleTacticsCard(card){\n  return [\"ALX\",\"DAR\",\"CAV\",\"321\"].indexOf(card) >= 0;\n}\n\nfunction isLeaderTacticsCard(card){\n  return [\"ALX\",\"DAR\"].indexOf(card) >= 0;\n}\n\nfunction isFormationCard(card){\n  return isTroopCard(card) || isMoraleTacticsCard(card);\n}\n\nfunction countFormationCards(formation){\n  let count = 0;\n  for (let i = 0; i != formation.length; i++){\n    if (isFormationCard(formation[i])){\n      count++;\n    }\n  }\n  return count;\n}\n\nfunction flagHasMud(formations){\n  for (let i = 0; i != 2; i++){\n    for (let j = 0; j != formations[i].length; j++){\n      if (formations[i][j] === \"MUD\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction flagHasFog(formations){\n  for (let i = 0; i != 2; i++){\n    for (let j = 0; j != formations[i].length; j++){\n      if (formations[i][j] === \"FOG\"){\n        return true;\n      }\n    }\n  }\n  return false;\n}\nexport default canPassTurn;","import React from 'react';\n\nvar COLOR_MAP = new Map([[\"r\",\"#FF0000\"],[\"o\",\"#FFA500\"],[\"y\",\"#FFFF00\"],[\"g\",\"#008000\"],[\"b\",\"#0000FF\"],[\"p\",\"#800080\"]]);\nvar TACTICS_FORMAT_MAP = new Map([[\"ALX\",[[\"ALEXANDER\"],6]],[\"DAR\",[[\"DARIUS\"],9]],[\"CAV\",[[\"COMPANION\",\"CAVALRY\"],6]],[\"321\",[[\"SHIELD\",\"BEARERS\"],8]],[\"TRA\",[[\"TRAITOR\"],9]],[\"DES\",[[\"DESERTER\"],7]],[\"RDP\",[[\"REDEPLOY\"],7]],[\"SCT\",[[\"SCOUT\"],9]],[\"FOG\",[[\"FOG\"],9]],[\"MUD\",[[\"MUD\"],9]]]);\n\n\nexport class Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.cardRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.cardRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 150);\n        let translate = (this.props.side === 'top' && this.props.selected) ||  (this.props.side === 'bottom' && !this.props.selected) ? 0:30;\n        ctx.translate(0,translate);\n        if (this.props.str.length === 2){\n            drawTroopCardFront(ctx, this.props.str, false);\n        }\n        else if (this.props.str.length === 3){\n            drawTacticsCardFront(ctx, this.props.str, false);\n        }\n        else if (this.props.str === 'troop'){\n            drawTroopCardBack(ctx);\n        }\n        else if (this.props.str === 'tactics'){\n            drawTacticsCardBack(ctx);\n        }\n        ctx.translate(0,-translate);\n    }\n\n    render() {\n         return (\n             <canvas ref={this.cardRefs} width={80} height={150}/>\n         );\n    }\n}\n\nexport class Formation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.formationRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.formationRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 295);\n        if (this.props.side === 'top'){\n            ctx.translate(0,175);\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlight && i === this.props.cards.length-1);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlight && i === this.props.cards.length-1);\n                }\n                ctx.translate(0,-35);\n            }\n            ctx.translate(0,-35*(5-this.props.cards.length))\n        }\n        else{\n            for (let i = 0; i !== this.props.cards.length; i++){\n                if (this.props.cards[i].length === 2){\n                    drawTroopCardFront(ctx, this.props.cards[i], this.props.highlight && i === this.props.cards.length-1);\n                }\n                else if (this.props.cards[i].length === 3){\n                    drawTacticsCardFront(ctx, this.props.cards[i], this.props.highlight && i === this.props.cards.length-1);\n                }\n                ctx.translate(0,35);\n            }\n            ctx.translate(0,-35*this.props.cards.length)\n        }\n        if (this.props.show_flag){\n            let y_offset = this.props.side === 'top' ? 35:105;\n            drawFlag(ctx, y_offset);\n        }\n        \n    }\n\n    render() {\n         return (\n             <canvas ref={this.formationRefs} width={80} height={295}/>\n         );\n    }   \n}\n\nexport class Flag extends React.Component {\n    constructor(props) {\n        super(props);\n        this.flagRefs = React.createRef();\n    }\n    componentDidMount() {\n        this.updateCanvas();\n    }\n    componentDidUpdate() {\n        this.updateCanvas();\n    }\n    updateCanvas() {    \n        const ctx = this.flagRefs.current.getContext('2d');\n        ctx.clearRect(0,0, 80, 50);\n        if (this.props.show_flag){\n            drawFlag(ctx, 0);\n        }\n    }\n    render() {\n         return (\n             <canvas ref={this.flagRefs} width={80} height={50}/>\n         );\n    }   \n}\n\nfunction drawTroopCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n    let val = card_str[0];\n    let color = card_str[1];\n\n    let border_color = highlight ? \"#000000\":\"#FFFFFF\";\n    drawCardOutline(ctx, card_width, card_height, 7, border_color);\n    ctx.fillStyle = COLOR_MAP.get(color);\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    ctx.font = \"18px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    for (let i = 0; i !== 2; i++){\n        if (val !== 'T'){\n            ctx.fillText(val, padding + inset_width/2, padding + inset_height/2 + lineHeight/2 - 2); \n        }\n        else{\n            let reduce_spacing = 4;\n            let width_1 = ctx.measureText('1').width;\n            let width_0 = ctx.measureText('0').width;\n\n            ctx.fillText('1', padding + inset_width/2 - width_1/2 + reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2); \n            ctx.fillText('0', padding + inset_width/2 + width_0/2 - reduce_spacing/2, padding + inset_height/2 + lineHeight/2 - 2);\n        }\n        if (val === '6' || val === '9'){\n            let width = ctx.measureText(val).width;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            ctx.moveTo(padding + inset_width/2 - width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.lineTo(padding + inset_width/2 + width/2, padding + inset_height/2 + lineHeight/2 + 1);\n            ctx.stroke();\n        }\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n}\n\nfunction drawTroopCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#000000\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TROOP', card_width/2, card_height/2)\n}\n\nfunction drawTacticsCardFront(ctx, card_str, highlight){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n    let inset_width = 20;\n    let inset_height = 25;\n    let val = card_str[0];\n    let color = card_str[1];\n\n    let border_color = highlight ? \"#000000\":\"#FFFFFF\";\n    drawCardOutline(ctx, card_width, card_height, 7, border_color);\n    ctx.fillStyle = \"#E4DB86\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(padding, padding, inset_width, inset_height);\n    ctx.fillRect(card_width-padding-inset_width, card_height-padding-inset_height, inset_width, inset_height);\n    let format = TACTICS_FORMAT_MAP.get(card_str);\n    let text = format[0];\n    let font_size = format[1];\n    ctx.font = font_size.toString() + \"px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    let lineHeight = ctx.measureText('M').width;\n    for (let i = 0; i != 2; i++){\n        for (let j = 0; j != text.length; j++){\n            ctx.fillText(text[j], (card_width + inset_width)/2, (35+padding+lineHeight*text.length)/2 - lineHeight*(text.length - 1 - j));\n        }\n        ctx.rotate(Math.PI);\n        ctx.translate(-card_width, -card_height);\n    }\n    if (format.length === 3){\n        console.log(format[2]);\n        format[2]();\n    }\n}\n\nfunction drawTacticsCardBack(ctx){\n    let card_width = 80;\n    let card_height = 120;\n    let padding = 7;\n\n    drawCardOutline(ctx, card_width, card_height, 7, \"#855040\");\n    ctx.fillStyle = \"#D2B48C\";\n    ctx.fillRect(padding, padding, card_width-2*padding, card_height-2*padding);\n\n    ctx.font = \"14px Verdana\";\n    ctx.fillStyle = \"#000000\";\n    ctx.textAlign = \"center\";\n    ctx.fillText('TACTICS', card_width/2, card_height/2)\n}\n\nfunction drawCardOutline(ctx, width, height, corner_radius, fill_color){\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = fill_color;\n    let lineWidth = 2;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(corner_radius+lineWidth/2, lineWidth/2);\n    ctx.lineTo(width-corner_radius-lineWidth/2, lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, lineWidth/2, width-lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(width-lineWidth/2, height-corner_radius-lineWidth/2);\n    ctx.arcTo(width-lineWidth/2, height-lineWidth/2, width-corner_radius-lineWidth/2, height-lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(corner_radius+lineWidth/2, height-lineWidth/2);\n    ctx.arcTo(lineWidth/2, height-lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, corner_radius+lineWidth/2);\n    ctx.lineTo(lineWidth/2, corner_radius+lineWidth/2);\n    ctx.arcTo(lineWidth/2, lineWidth/2, corner_radius+lineWidth/2, lineWidth/2, corner_radius+lineWidth/2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n\nfunction drawFlag(ctx, y_offset){\n    var img = document.getElementById(\"flag\");\n    ctx.drawImage(img, 15, y_offset, 50, 50);\n}\n\n// function drawLeaderIcon(ctx, x, y, width, height){\n//     console.log(\"Draw leader icon\");\n// }","import React from 'react';\nimport {Card, Formation, Flag} from './BoardComponents'\nimport canPassTurn from './Game'\n\nexport class BattleLineBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selected_card = null;\n  }\n  onClickCard(player_id, card_id) {\n    if (this.props.ctx.currentPlayer !== player_id || this.props.ctx.currentPlayer !== this.props.playerID){\n      return;\n    }\n    if (this.selected_card !== card_id){\n      this.selected_card = card_id;\n      this.forceUpdate();\n    }\n    else{\n      this.selected_card = null;\n      this.forceUpdate();\n    }\n\n  }\n  onClickSlot(player_id, flag_id) {\n    if (this.props.ctx.currentPlayer !== player_id){\n      return;\n    }\n    if (this.selected_card === null){\n      return;\n    }\n    this.props.moves.playCard(this.selected_card, flag_id);\n    this.selected_card = null;\n  }\n  onClickFlag(flag_id){\n    this.props.moves.claimFlag(flag_id); \n  }\n  onClickDeck(deck_name){\n    this.props.moves.drawCard(deck_name); \n  }\n  onClickPass(){\n    this.props.moves.passTurn();\n  }\n  render() {\n    let tbody = [];\n\n    let cells = [];\n    let text_display = '';\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '0'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '0'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key ={cells.length} style={{textAlign: 'center'}}>\n          {text_display}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[0].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('0', i)}>\n          <Card str={this.props.G.player_hands[0][i]} side={'top'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='0' && this.props.playerID==='0' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    let pass_display = new Array(2).fill('none');\n    for (let i = 0; i !== 2; i++){\n      if (this.props.ctx.currentPlayer === this.props.playerID && this.props.ctx.currentPlayer === i.toString() && canPassTurn(this.props.G, this.props.ctx)){\n        pass_display[i] = 'block';\n      }\n    }\n    cells.push(\n      <td rowSpan=\"3\" key={cells.length}>\n        <table id=\"troop_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[0]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n            <tr>\n              <td onClick={() => this.onClickDeck('troop')}>\n                <Card str={this.props.G.troop_deck.length>0 ? this.props.G.troop_deck[0]:''}/>\n              </td>\n            </tr>\n            <tr>\n              <td style={{height:'50px'}}>\n                <input type=\"button\" value=\"Pass\" style={{margin:'auto',display:pass_display[1]}} onClick={() => this.onClickPass()}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][0];\n      let show_flag = this.props.G.flag_statuses[i]==='0';\n      let highlight = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '0';\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickSlot('0', i)}>\n          <Formation cards={cards} side={'top'} show_flag={show_flag} highlight={highlight}/>\n        </td>\n      );\n    }\n    cells.push(\n      <td rowSpan=\"3\" key={cells.length}>\n        <table id=\"tactics_deck\" style={{margin:'auto'}}>\n          <tbody>\n            <tr>\n              <td onClick={() => this.onClickDeck('tactics')}>\n                <Card str={this.props.G.tactics_deck.length>0 ? this.props.G.tactics_deck[0]:''}/>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </td>\n    );\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickFlag(i)}>\n          <Flag show_flag={this.props.G.flag_statuses[i]===null}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n\n    for (let i = 0; i < 9; i++) {\n      let cards = this.props.G.board_cards[i][1];\n      let show_flag = this.props.G.flag_statuses[i]==='1';\n      let highlight = cards.length > 0 && cards.slice(-1)[0] === this.props.G.seen_cards.slice(-1)[0] && this.props.playerID !== '1';\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickSlot('1',i)}>\n          <Formation cards={cards} side={'bottom'} show_flag={show_flag} highlight={highlight}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    cells = [];\n    text_display = '';\n    if (this.props.ctx.gameover !== undefined && this.props.ctx.gameover.winner === '1'){\n      text_display = 'Winner!'\n    }\n    else if (this.props.ctx.currentPlayer === '1'){\n      text_display = 'Your turn!'\n    }\n    cells.push(\n        <td key={cells.length} style={{textAlign: 'center'}}>\n          {this.props.ctx.currentPlayer === '1' ? 'Your turn!': ''}\n        </td>\n    );\n    for (let i = 0; i < this.props.G.player_hands[1].length; i++) {\n      cells.push(\n        <td key={cells.length} onClick={() => this.onClickCard('1',i)}>\n          <Card str={this.props.G.player_hands[1][i]} side={'bottom'} selected={i===this.selected_card && this.props.ctx.currentPlayer==='1' && this.props.playerID==='1' && this.props.ctx.numMoves===0}/>\n        </td>\n      );\n    }\n    tbody.push(<tr key={tbody.length}>{cells}</tr>);\n    return (\n      <div>\n        <table id=\"board\" style={{margin:\"auto\"}}>\n          <tbody>{tbody}</tbody>\n        </table>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Lobby } from 'boardgame.io/react';\n\nexport class BattleLineLobby extends Lobby{\n    handleChangeName(event){\n        this.setState({\n            playerName: event.target.value,\n        });\n    }\n    handleNewRoom(event){\n        this._createRoom('battle-line', 2);\n    }\n    handleRefreshRooms(event){\n        this._updateConnection();\n    }\n    handleJoinRoom(event, gameID, playerID){\n        this._joinRoom('battle-line', gameID, playerID);\n    }\n    handleLeaveRoom(event, gameID){\n        this._leaveRoom('battle-line', gameID);\n    }\n    handleEnterLobby(event){\n        this._enterLobby(this.state.playerName);\n    }\n    handleExitLobby(event){\n        this._exitLobby();\n    }\n    handleStartGame(event, gameID, playerID){\n        this._startGame('battle-line', {numPlayers: 2, gameID: gameID, playerID: playerID});\n    }\n    handleExitRoom(event){\n        this._exitRoom();\n    }\n    render(){\n        var rooms_thead = [];\n        var rooms_th = [];\n\n        const room_id_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const player_name_col_style = {\n            width:\"150px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const vs_col_style = {\n            width:\"30px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n        const button_col_style = {\n            width:\"100px\",\n            textAlign: 'center',\n            padding: '3px'\n        }\n\n        rooms_th.push(<th style={room_id_col_style}>{'Room ID'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 1'}</th>);\n        rooms_th.push(<th style={vs_col_style}>{'vs.'}</th>);\n        rooms_th.push(<th style={player_name_col_style}>{'Player 2'}</th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"New Room\" onClick={(event) => this.handleNewRoom(event)}/></th>);\n        rooms_th.push(<th style={button_col_style}><input type=\"button\" value=\"Refresh\" onClick={(event) => this.handleRefreshRooms(event)}/></th>);\n        rooms_thead.push(<tr>{rooms_th}</tr>);\n\n        var rooms_tbody = [];\n        for (var i = 0; i !== this.connection.rooms.length; i++){\n            var rooms_row = [];\n            let room = this.connection.rooms[i];\n            var player1_name = (room.players.length > 0) ? room.players[0].name:undefined;\n            var player2_name = (room.players.length > 1) ? room.players[1].name:undefined;\n\n            rooms_row.push(<td style={room_id_col_style}>{room.gameID}</td>);\n            if (player1_name !== undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player1_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 0)}/></td>);\n            }\n            rooms_row.push(<td style={vs_col_style}>{'vs.'}</td>);\n            if (player2_name !== undefined){\n                rooms_row.push(<td style={player_name_col_style}>{player2_name}</td>);\n            }\n            else{\n                rooms_row.push(<td style={player_name_col_style}><input type=\"button\" value=\"Join\" onClick={(event) => this.handleJoinRoom(event, room.gameID, 1)}/></td>);\n            }    \n\n            if (player1_name === this.state.playerName || player2_name === this.state.playerName){\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Leave\" onClick={(event) => this.handleLeaveRoom(event, room.gameID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            if((player1_name === this.state.playerName && player2_name !== undefined) || (player2_name === this.state.playerName && player1_name !== undefined)){\n                let playerID = this.state.playerName === player1_name ? '0':'1';\n                rooms_row.push(<td style={button_col_style}><input type=\"button\" value=\"Play\" onClick={(event) => this.handleStartGame(event, room.gameID, playerID)}/></td>);\n            }\n            else{\n                rooms_row.push(<td style={button_col_style}></td>);\n            }\n            rooms_tbody.push(<tr>{rooms_row}</tr>);\n        }\n\n        // var errMsg = this.state.errorMsg !== '' ? 'Error: ' + this.state.errorMsg:'';\n\n        if (this.state.phase === 'enter'){\n            return (\n                <div>\n                    {'Enter name: '}\n                    <input type=\"text\" value={this.state.playerName} onChange={(event) => this.handleChangeName(event)}/>\n                    <input type=\"button\" value=\"Enter Lobby\" onClick={(event) => this.handleEnterLobby(event)}/>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'list'){\n            return (\n                <div>\n                    <input type=\"button\" value=\"Exit Lobby\" onClick={(event) => this.handleExitLobby(event)}/>\n                    <br></br>\n                    <table id=\"rooms\">\n                        <thead>\n                            {rooms_thead}\n                        </thead>\n                        <tbody>\n                            {rooms_tbody}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n        else if (this.state.phase === 'play'){\n            var board_element = React.createElement(this.state.runningGame.app, {\n                gameID: this.state.runningGame.gameID,\n                playerID: this.state.runningGame.playerID,\n                credentials: this.state.runningGame.credentials\n            });\n            return (\n                <div>\n                    {board_element}\n                </div>\n            );\n        }\n\n    }\n}","import React from 'react';\n\nexport class Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <table style={{width:\"100%\"}} bgcolor=\"#E4DB86\">\n                    <tbody>\n                        <tr>\n                            <td style={{fontFamily:\"Verdana\", fontSize:\"30px\",padding:\"10px\"}}>\n                                <a href=\"https://rsandzimier.github.io/battleline/\" style={{color:\"inherit\", textDecoration:\"none\"}}>\n                                    BATTLE LINE\n                                </a>\n                            </td>\n                            <td style={{textAlign:\"right\"}}>\n                                <a href=\"https://github.com/rsandzimier/battleline\">\n                                    <img id=\"github\" src=\"https://raw.githubusercontent.com/rsandzimier/battleline/master/github_logo.png\" style={{height:\"50px\"}} alt=\"Github logo\"/>\n                                </a>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table><br></br>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Client } from 'boardgame.io/react';\nimport { SocketIO } from 'boardgame.io/multiplayer';\nimport { BattleLine } from './Game';\nimport { BattleLineBoard } from './Board';\nimport { BattleLineLobby } from './Lobby';\nimport { Header } from './Header';\n\nconst BattleLineClient = Client({\n  game: BattleLine,\n  board: BattleLineBoard,\n  // ONLINE:\n  multiplayer: SocketIO({ server: 'https://battleline-backend.herokuapp.com' }),\n  // LOCAL:\n  // multiplayer: SocketIO({ server: 'localhost:8000' }),\n  // END\n});\n\n// ONLINE:\nconst App = () => (\n  <div>\n    <Header/>\n    <BattleLineLobby\n    gameServer={'https://battleline-backend.herokuapp.com'}\n    lobbyServer={'https://battleline-backend.herokuapp.com'}\n    gameComponents={[{game: BattleLine, board: BattleLineBoard}]}\n    />\n  </div>\n)\n\n// LOCAL:\n// const App = () => (\n//   <div>\n//     <Header/>\n//     <BattleLineClient/>\n//   </div>\n// )\n// END\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}